{"version":3,"file":"index.js","sources":["src/component/geoloc/geoloc.vue?rollup-plugin-vue=script.js","src/component/geoloc/geoloc.vue","src/component/geoloc/index.js"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport Geolocation from 'ol/Geolocation'\nimport { merge } from 'rxjs/observable'\nimport { olCmp, useMapCmp, projTransforms } from '../../mixin'\nimport { observableFromOlChangeEvent } from '../../rx-ext'\nimport { hasGeolocation } from '../../util/assert'\n\nconst props = {\n  tracking: {\n    type: Boolean,\n    default: true,\n  },\n  trackingOptions: Object,\n  /**\n   * @type {string}\n   */\n  projection: String,\n  // todo add autoCenter, bindToPosition\n}\n\nconst computed = {\n  accuracy () {\n    if (this.rev && this.$geolocation) {\n      return this.$geolocation.getAccuracy()\n    }\n  },\n  altitude () {\n    if (this.rev && this.$geolocation) {\n      return this.$geolocation.getAltitude()\n    }\n  },\n  altitudeAccuracy () {\n    if (this.rev && this.$geolocation) {\n      return this.$geolocation.getAltitudeAccuracy()\n    }\n  },\n  heading () {\n    if (this.rev && this.$geolocation) {\n      return this.$geolocation.getHeading()\n    }\n  },\n  speed () {\n    if (this.rev && this.$geolocation) {\n      return this.$geolocation.getSpeed()\n    }\n  },\n  position () {\n    if (this.rev && this.$geolocation) {\n      return this.$geolocation.getPosition()\n    }\n  },\n  positionViewProj () {\n    if (this.position && this.resolvedDataProjection) {\n      return this.pointToViewProj(this.position)\n    }\n  },\n}\n\nconst methods = {\n  /**\n   * @return {Geolocation}\n   * @private\n   */\n  createOlObject () {\n    return new Geolocation({\n      tracking: this.tracking,\n      trackingOptions: this.trackingOptions,\n      projection: this.resolvedDataProjection,\n    })\n  },\n  /**\n   * @return {void}\n   * @private\n   */\n  mount () {\n    this.subscribeAll()\n  },\n  /**\n   * @return {void}\n   * @private\n   */\n  unmount () {\n    hasGeolocation(this)\n\n    this.unsubscribeAll()\n    this.$geolocation.setTracking(false)\n  },\n  /**\n   * @return {void}\n   * @protected\n   */\n  subscribeAll () {\n    this::subscribeToGeolocation()\n  },\n}\n\nconst watch = {\n  /**\n   * @param {boolean} value\n   */\n  tracking (value) {\n    if (this.$geolocation && value !== this.$geolocation.getTracking()) {\n      this.$geolocation.setTracking(value)\n    }\n  },\n  tracingOptions (value) {\n    this.$geolocation && this.$geolocation.setTrackingOptions(value)\n  },\n  resolvedDataProjection (value) {\n    if (this.$geolocation) {\n      this.$geolocation.setProjection(value)\n    }\n  },\n}\n\nexport default {\n  name: 'vl-geoloc',\n  mixins: [olCmp, useMapCmp, projTransforms],\n  props,\n  computed,\n  methods,\n  watch,\n  stubVNode: {\n    empty () {\n      return this.$options.name\n    },\n  },\n  created () {\n    Object.defineProperties(this, {\n      /**\n       * @type {Geolocation|undefined}\n       */\n      $geolocation: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      $map: {\n        enumerable: true,\n        get: () => this.$services && this.$services.map,\n      },\n      /**\n       * Reference to `ol.View` instance.\n       * @type {View|undefined}\n       */\n      $view: {\n        enumerable: true,\n        get: () => this.$services && this.$services.view,\n      },\n    })\n  },\n}\n\n/**\n * @return {void}\n * @private\n */\nfunction subscribeToGeolocation () {\n  hasGeolocation(this)\n\n  const ft = 100\n  const changes = merge(\n    observableFromOlChangeEvent(\n      this.$geolocation,\n      [\n        'accuracy',\n        'altitude',\n        'altitudeaccuracy',\n        'heading',\n        'speed',\n      ],\n      true,\n      ft,\n    ),\n    observableFromOlChangeEvent(\n      this.$geolocation,\n      'position',\n      true,\n      ft,\n      () => this.position,\n    ),\n  )\n\n  this.subscribeTo(changes, ({ prop, value }) => {\n    ++this.rev\n    this.$emit(`update:${prop}`, value)\n  })\n}\n","<template>\n  <i :class=\"[$options.name]\" style=\"display: none !important;\">\n    <slot :accuracy=\"accuracy\" :altitude=\"altitude\" :altitude-accuracy=\"altitudeAccuracy\"\n          :heading=\"heading\" :position=\"position\" :speed=\"speed\">\n    </slot>\n  </i>\n</template>\n\n<script>\n  import Geolocation from 'ol/Geolocation'\n  import { merge } from 'rxjs/observable'\n  import { olCmp, useMapCmp, projTransforms } from '../../mixin'\n  import { observableFromOlChangeEvent } from '../../rx-ext'\n  import { hasGeolocation } from '../../util/assert'\n\n  const props = {\n    tracking: {\n      type: Boolean,\n      default: true,\n    },\n    trackingOptions: Object,\n    /**\n     * @type {string}\n     */\n    projection: String,\n    // todo add autoCenter, bindToPosition\n  }\n\n  const computed = {\n    accuracy () {\n      if (this.rev && this.$geolocation) {\n        return this.$geolocation.getAccuracy()\n      }\n    },\n    altitude () {\n      if (this.rev && this.$geolocation) {\n        return this.$geolocation.getAltitude()\n      }\n    },\n    altitudeAccuracy () {\n      if (this.rev && this.$geolocation) {\n        return this.$geolocation.getAltitudeAccuracy()\n      }\n    },\n    heading () {\n      if (this.rev && this.$geolocation) {\n        return this.$geolocation.getHeading()\n      }\n    },\n    speed () {\n      if (this.rev && this.$geolocation) {\n        return this.$geolocation.getSpeed()\n      }\n    },\n    position () {\n      if (this.rev && this.$geolocation) {\n        return this.$geolocation.getPosition()\n      }\n    },\n    positionViewProj () {\n      if (this.position && this.resolvedDataProjection) {\n        return this.pointToViewProj(this.position)\n      }\n    },\n  }\n\n  const methods = {\n    /**\n     * @return {Geolocation}\n     * @private\n     */\n    createOlObject () {\n      return new Geolocation({\n        tracking: this.tracking,\n        trackingOptions: this.trackingOptions,\n        projection: this.resolvedDataProjection,\n      })\n    },\n    /**\n     * @return {void}\n     * @private\n     */\n    mount () {\n      this.subscribeAll()\n    },\n    /**\n     * @return {void}\n     * @private\n     */\n    unmount () {\n      hasGeolocation(this)\n\n      this.unsubscribeAll()\n      this.$geolocation.setTracking(false)\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    subscribeAll () {\n      this::subscribeToGeolocation()\n    },\n  }\n\n  const watch = {\n    /**\n     * @param {boolean} value\n     */\n    tracking (value) {\n      if (this.$geolocation && value !== this.$geolocation.getTracking()) {\n        this.$geolocation.setTracking(value)\n      }\n    },\n    tracingOptions (value) {\n      this.$geolocation && this.$geolocation.setTrackingOptions(value)\n    },\n    resolvedDataProjection (value) {\n      if (this.$geolocation) {\n        this.$geolocation.setProjection(value)\n      }\n    },\n  }\n\n  export default {\n    name: 'vl-geoloc',\n    mixins: [olCmp, useMapCmp, projTransforms],\n    props,\n    computed,\n    methods,\n    watch,\n    stubVNode: {\n      empty () {\n        return this.$options.name\n      },\n    },\n    created () {\n      Object.defineProperties(this, {\n        /**\n         * @type {Geolocation|undefined}\n         */\n        $geolocation: {\n          enumerable: true,\n          get: () => this.$olObject,\n        },\n        $map: {\n          enumerable: true,\n          get: () => this.$services && this.$services.map,\n        },\n        /**\n         * Reference to `ol.View` instance.\n         * @type {View|undefined}\n         */\n        $view: {\n          enumerable: true,\n          get: () => this.$services && this.$services.view,\n        },\n      })\n    },\n  }\n\n  /**\n   * @return {void}\n   * @private\n   */\n  function subscribeToGeolocation () {\n    hasGeolocation(this)\n\n    const ft = 100\n    const changes = merge(\n      observableFromOlChangeEvent(\n        this.$geolocation,\n        [\n          'accuracy',\n          'altitude',\n          'altitudeaccuracy',\n          'heading',\n          'speed',\n        ],\n        true,\n        ft,\n      ),\n      observableFromOlChangeEvent(\n        this.$geolocation,\n        'position',\n        true,\n        ft,\n        () => this.position,\n      ),\n    )\n\n    this.subscribeTo(changes, ({ prop, value }) => {\n      ++this.rev\n      this.$emit(`update:${prop}`, value)\n    })\n  }\n</script>\n","import { pick } from '../../util/minilo'\nimport Geoloc from './geoloc.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Geoloc, options)\n\n  Vue.component(Geoloc.name, Geoloc)\n}\n\nexport default plugin\n\nexport {\n  Geoloc,\n  plugin as install,\n}\n"],"names":["props","tracking","type","Boolean","default","trackingOptions","Object","projection","String","computed","accuracy","rev","$geolocation","getAccuracy","altitude","getAltitude","altitudeAccuracy","getAltitudeAccuracy","heading","getHeading","speed","getSpeed","position","getPosition","positionViewProj","resolvedDataProjection","pointToViewProj","methods","createOlObject","Geolocation","mount","subscribeAll","unmount","hasGeolocation","unsubscribeAll","setTracking","subscribeToGeolocation","watch","value","getTracking","tracingOptions","setTrackingOptions","setProjection","name","mixins","olCmp","useMapCmp","projTransforms","stubVNode","empty","$options","created","enumerable","get","$olObject","$map","$services","map","$view","view","ft","changes","merge","observableFromOlChangeEvent","subscribeTo","prop","$emit","plugin","Vue","options","installed","pick","Geoloc","component"],"mappings":"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"}