{"version":3,"file":"tile-source.js","sources":["src/mixin/tile-source.js"],"sourcesContent":["import { createTileUrlFunction } from 'ol-tilecache'\nimport { observableFromOlEvent } from '../rx-ext'\nimport {\n  CACHE_SIZE,\n  EPSG_3857,\n  MAX_ZOOM,\n  MIN_ZOOM,\n  PIXEL_RATIO,\n  REPROJ_ERR_THRESHOLD,\n  TILE_SIZE,\n} from '../ol-ext/consts'\nimport { createExtentFromProjection } from '../ol-ext/extent'\nimport { createXyzGrid } from '../ol-ext/tile-grid'\nimport { hasSource, hasView } from '../util/assert'\nimport { isFunction, isString, pick, replaceTokens } from '../util/minilo'\nimport source from './source'\nimport withUrl from './with-url'\n\nconst props = {\n  cacheSize: {\n    type: Number,\n    default: CACHE_SIZE,\n  },\n  crossOrigin: String,\n  maxZoom: {\n    type: Number,\n    default: MAX_ZOOM,\n  },\n  minZoom: {\n    type: Number,\n    default: MIN_ZOOM,\n  },\n  opaque: Boolean,\n  projection: {\n    type: String,\n    default: EPSG_3857,\n  },\n  reprojectionErrorThreshold: {\n    type: Number,\n    default: REPROJ_ERR_THRESHOLD,\n  },\n  tilePixelRatio: {\n    type: Number,\n    default: PIXEL_RATIO,\n  },\n  tileSize: {\n    type: Array,\n    default: () => [TILE_SIZE, TILE_SIZE],\n    validator: value => value.length === 2,\n  },\n  tileLoadFunction: Function,\n  url: {\n    type: [String, Function],\n    required: true,\n  },\n  /**\n   * Duration of the opacity transition for rendering. To disable the opacity transition, pass `0`.\n   * @type {number}\n   */\n  transition: Number,\n}\n\nconst computed = {\n  /**\n   * @type {string}\n   */\n  urlTmpl () {\n    if (!isString(this.url)) {\n      return ''\n    }\n    return replaceTokens(this.url, pick(this, this.urlTokens))\n  },\n}\n\nconst methods = {\n  /**\n   * @return {TileGrid}\n   * @protected\n   */\n  createTileGrid () {\n    hasView(this)\n\n    return createXyzGrid({\n      extent: createExtentFromProjection(this.$view.getProjection()),\n      maxZoom: this.maxZoom,\n      minZoom: this.minZoom,\n      tileSize: this.tileSize,\n    })\n  },\n  /**\n   * @return {TileUrlFunction}\n   * @protected\n   */\n  createUrlFunc () {\n    // custom url function provided\n    if (isFunction(this.url)) {\n      return this.url\n    }\n    hasView(this)\n    // or use url function from ol-tilecache\n    return createTileUrlFunction(\n      this.urlTmpl,\n      this._tileGrid,\n      createExtentFromProjection(this.$view.getProjection()),\n    )\n  },\n  /**\n   * @return {Promise}\n   * @protected\n   */\n  init () {\n    /**\n     * @type {TileGrid}\n     * @protected\n     */\n    this._tileGrid = this.createTileGrid()\n\n    return this::source.methods.init()\n  },\n  /**\n   * @return {void|Promise<void>}\n   * @protected\n   */\n  deinit () {\n    this._tileGrid = undefined\n\n    return this::source.methods.deinit()\n  },\n  /**\n   * @return {void}\n   * @protected\n   */\n  mount () {\n    this::source.methods.mount()\n  },\n  /**\n   * @return {void}\n   * @protected\n   */\n  unmount () {\n    this::source.methods.mount()\n  },\n  subscribeAll () {\n    this::subscribeToSourceEvents()\n  },\n}\n\nconst watch = {\n  url () {\n    if (this.$source) {\n      this.$source.setTileUrlFunction(this.createUrlFunc())\n      this.scheduleRefresh()\n    }\n  },\n}\n\nexport default {\n  mixins: [source, withUrl],\n  props,\n  computed,\n  methods,\n  watch,\n}\n\nfunction subscribeToSourceEvents () {\n  hasSource(this)\n\n  const events = observableFromOlEvent(this.$source, [\n    'tileloadstart',\n    'tileloadend',\n    'tileloaderror',\n  ])\n\n  this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n}\n"],"names":["props","cacheSize","type","Number","default","CACHE_SIZE","crossOrigin","String","maxZoom","MAX_ZOOM","minZoom","MIN_ZOOM","opaque","Boolean","projection","EPSG_3857","reprojectionErrorThreshold","REPROJ_ERR_THRESHOLD","tilePixelRatio","PIXEL_RATIO","tileSize","Array","TILE_SIZE","validator","value","length","tileLoadFunction","Function","url","required","transition","computed","urlTmpl","isString","replaceTokens","pick","urlTokens","methods","createTileGrid","hasView","createXyzGrid","extent","createExtentFromProjection","$view","getProjection","createUrlFunc","isFunction","createTileUrlFunction","_tileGrid","init","source","deinit","undefined","mount","unmount","subscribeAll","subscribeToSourceEvents","watch","$source","setTileUrlFunction","scheduleRefresh","mixins","withUrl","hasSource","events","observableFromOlEvent","subscribeTo","evt","$emit"],"mappings":"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"}