/**
 * VueLayers
 * Web map Vue components with the power of OpenLayers
 *
 * @package vuelayers
 * @author Vladimir Vershinin <ghettovoice@gmail.com>
 * @version 0.11.4
 * @license MIT
 * @copyright (c) 2017-2019, Vladimir Vershinin <ghettovoice@gmail.com>
 */
import { observableFromOlEvent } from '../rx-ext';
import { EPSG_3857 } from '../ol-ext/consts';
import { hasSource } from '../util/assert';
import source from './source';

/**
 * @vueProps
 */

var props = {
  crossOrigin: String,
  projection: {
    type: String,
    default: EPSG_3857
  }
  /**
   * @vueMethods
   */

};
var methods = {
  /**
   * @return {Promise}
   * @protected
   */
  init: function init() {
    return source.methods.init.call(this);
  },

  /**
   * @return {void|Promise<void>}
   * @protected
   */
  deinit: function deinit() {
    return source.methods.deinit.call(this);
  },

  /**
   * @return {void}
   * @protected
   */
  mount: function mount() {
    source.methods.mount.call(this);
  },

  /**
   * @return {void}
   * @protected
   */
  unmount: function unmount() {
    source.methods.unmount.call(this);
  },
  subscribeAll: function subscribeAll() {
    subscribeToSourceEvents.call(this);
  }
};
/**
 * @vueProto
 * @alias module:mixin/image-source
 */

var imageSource = {
  mixins: [source],
  props: props,
  methods: methods
};

function subscribeToSourceEvents() {
  var _this = this;

  hasSource(this);
  var events = observableFromOlEvent(this.$source, ['imageloadend', 'imageloaderror', 'imageloadstart']);
  this.subscribeTo(events, function (evt) {
    return _this.$emit(evt.type, evt);
  });
}

export default imageSource;
