{"version":3,"file":"interaction.js","sources":["src/mixin/interaction.js"],"sourcesContent":["import uuid from 'uuid/v4'\nimport mergeDescriptors from '../util/multi-merge-descriptors'\nimport cmp from './ol-virt-cmp'\nimport useMapCmp from './use-map-cmp'\n\nconst props = {\n  id: {\n    type: [String, Number],\n    default: () => uuid(),\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * Priority of interactions in the event handling stream.\n   * The higher the value, the sooner it will handle map event.\n   * @type {number}\n   */\n  priority: {\n    type: Number,\n    default: 0,\n  },\n}\n\nconst methods = {\n  /**\n   * @return {Promise<Interaction>}\n   * @protected\n   */\n  async createOlObject () {\n    const interaction = await this.createInteraction()\n    interaction.setActive(this.active)\n    interaction.setProperties({\n      id: this.id,\n      priority: this.priority,\n    })\n\n    return interaction\n  },\n  /**\n   * @return {Interaction|Promise<Interaction>}\n   * @protected\n   * @abstract\n   */\n  createInteraction () {\n    throw new Error('Not implemented method')\n  },\n  /**\n   * @returns {Object}\n   * @protected\n   */\n  getServices () {\n    const vm = this\n\n    return mergeDescriptors(this::cmp.methods.getServices(), {\n      get interaction () { return vm.$interaction },\n    })\n  },\n  /**\n   * @return {Promise} Resolves when initialization completes\n   * @protected\n   */\n  init () {\n    return this::cmp.methods.init()\n  },\n  /**\n   * @return {void|Promise<void>}\n   * @protected\n   */\n  deinit () {\n    return this::cmp.methods.deinit()\n  },\n  /**\n   * @return {void}\n   * @protected\n   */\n  mount () {\n    this.$interactionsContainer && this.$interactionsContainer.addInteraction(this)\n    this.subscribeAll()\n  },\n  /**\n   * @return {void}\n   * @protected\n   */\n  unmount () {\n    this.unsubscribeAll()\n    this.$interactionsContainer && this.$interactionsContainer.removeInteraction(this)\n  },\n  /**\n   * @return {Promise}\n   */\n  refresh () {\n    return this::cmp.methods.refresh()\n  },\n}\n\nconst watch = {\n  active (value) {\n    if (this.$interaction && value !== this.$interaction.getActive()) {\n      this.$interaction.setActive(value)\n    }\n  },\n  priority (value) {\n    if (!this.$interactionsContainer) return\n\n    this.$interaction.set('priority', value)\n    this.$interactionsContainer.sortInteractions()\n  },\n}\n\nexport default {\n  mixins: [cmp, useMapCmp],\n  props,\n  methods,\n  watch,\n  stubVNode: {\n    empty () {\n      return this.$options.name\n    },\n  },\n  created () {\n    Object.defineProperties(this, {\n      /**\n       * @type {Interaction|undefined}\n       */\n      $interaction: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      $map: {\n        enumerable: true,\n        get: () => this.$services && this.$services.map,\n      },\n      $view: {\n        enumerable: true,\n        get: () => this.$services && this.$services.view,\n      },\n      $interactionsContainer: {\n        enumerable: true,\n        get: () => this.$services && this.$services.interactionsContainer,\n      },\n    })\n  },\n}\n"],"names":["props","id","type","String","Number","default","uuid","active","Boolean","priority","methods","createOlObject","createInteraction","interaction","setActive","setProperties","Error","getServices","vm","mergeDescriptors","cmp","$interaction","init","deinit","mount","$interactionsContainer","addInteraction","subscribeAll","unmount","unsubscribeAll","removeInteraction","refresh","watch","value","getActive","set","sortInteractions","mixins","useMapCmp","stubVNode","empty","$options","name","created","enumerable","get","$olObject","$map","$services","map","$view","view","interactionsContainer"],"mappings":"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"}