{"version":3,"file":"style.js","sources":["src/mixin/style.js"],"sourcesContent":["import { first as firstObs } from 'rxjs/operators'\nimport mergeDescriptors from '../util/multi-merge-descriptors'\nimport { observableFromOlEvent } from '../rx-ext'\nimport cmp from './ol-virt-cmp'\nimport useMapCmp from './use-map-cmp'\n\n/**\n * Basic style mixin.\n */\nconst methods = {\n  /**\n   * @return {OlStyle|Promise<OlStyle>}\n   * @protected\n   */\n  createOlObject () {\n    return this.createStyle()\n  },\n  /**\n   * @return {OlStyle|Promise<OlStyle>}\n   * @protected\n   * @abstract\n   */\n  createStyle () {\n    throw new Error('Not implemented method')\n  },\n  /**\n   * @return {Promise}\n   * @protected\n   */\n  init () {\n    return this::cmp.methods.init()\n  },\n  /**\n   * @return {void|Promise<void>}\n   * @protected\n   */\n  deinit () {\n    return this::cmp.methods.deinit()\n  },\n  /**\n   * @return {Object}\n   * @protected\n   */\n  getServices () {\n    const vm = this\n\n    return mergeDescriptors(this::cmp.methods.getServices(), {\n      get style () { return vm.$style },\n    })\n  },\n  /**\n   * @return {Promise}\n   */\n  refresh () {\n    if (this.$olObject == null) return Promise.resolve()\n\n    return this.remount()\n      .then(() => {\n        if (!this.$map) {\n          return\n        }\n\n        this.$map.render()\n\n        return observableFromOlEvent(this.$map, 'postcompose')\n          .pipe(firstObs())\n          .toPromise()\n      })\n  },\n}\n\nexport default {\n  mixins: [cmp, useMapCmp],\n  methods,\n  stubVNode: {\n    empty () {\n      return this.$options.name\n    },\n  },\n  created () {\n    Object.defineProperties(this, {\n      $style: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      $map: {\n        enumerable: true,\n        get: () => this.$services && this.$services.map,\n      },\n      $view: {\n        enumerable: true,\n        get: () => this.$services && this.$services.view,\n      },\n      $stylesContainer: {\n        enumerable: true,\n        get: () => this.$services && this.$services.stylesContainer,\n      },\n    })\n  },\n}\n"],"names":["methods","createOlObject","createStyle","Error","init","cmp","deinit","getServices","vm","mergeDescriptors","style","$style","refresh","$olObject","resolve","remount","then","$map","render","observableFromOlEvent","pipe","firstObs","toPromise","mixins","useMapCmp","stubVNode","empty","$options","name","created","enumerable","get","$services","map","$view","view","$stylesContainer","stylesContainer"],"mappings":";;;;;;;;;;;;;;;;;;AAMA;;;;AAGA,IAAMA,OAAO,GAAG;;;;;EAKdC,cALc,4BAKI;WACT,KAAKC,WAAL,EAAP;GANY;;;;;;;EAadA,WAbc,yBAaC;UACP,IAAIC,KAAJ,CAAU,wBAAV,CAAN;GAdY;;;;;;EAoBdC,IApBc,kBAoBN;WACOC,GAAG,CAACL,OAAJ,CAAYI,IAAlB,WAAP;GArBY;;;;;;EA2BdE,MA3Bc,oBA2BJ;WACKD,GAAG,CAACL,OAAJ,CAAYM,MAAlB,WAAP;GA5BY;;;;;;EAkCdC,WAlCc,yBAkCC;QACPC,EAAE,GAAG,IAAX;WAEOC,gBAAgB,CAAOJ,GAAG,CAACL,OAAJ,CAAYO,WAAlB,WAAD,EAAkC;UACnDG,KAAJ,GAAa;eAASF,EAAE,CAACG,MAAV;;;KADM,CAAvB;GArCY;;;;;EA4CdC,OA5Cc,qBA4CH;;;QACL,KAAKC,SAAL,IAAkB,IAAtB,EAA4B,OAAO,SAAQC,OAAR,EAAP;WAErB,KAAKC,OAAL,GACJC,IADI,CACC,YAAM;UACN,CAAC,KAAI,CAACC,IAAV,EAAgB;;;;MAIhB,KAAI,CAACA,IAAL,CAAUC,MAAV;;aAEOC,qBAAqB,CAAC,KAAI,CAACF,IAAN,EAAY,aAAZ,CAArB,CACJG,IADI,CACCC,KAAQ,EADT,EAEJC,SAFI,EAAP;KARG,CAAP;;CA/CJ;AA8DA,YAAe;EACbC,MAAM,EAAE,CAAClB,GAAD,EAAMmB,SAAN,CADK;EAEbxB,OAAO,EAAPA,OAFa;EAGbyB,SAAS,EAAE;IACTC,KADS,mBACA;aACA,KAAKC,QAAL,CAAcC,IAArB;;GALS;EAQbC,OARa,qBAQF;;;6BACe,IAAxB,EAA8B;MAC5BlB,MAAM,EAAE;QACNmB,UAAU,EAAE,IADN;QAENC,GAAG,EAAE;iBAAM,MAAI,CAAClB,SAAX;;OAHqB;MAK5BI,IAAI,EAAE;QACJa,UAAU,EAAE,IADR;QAEJC,GAAG,EAAE;iBAAM,MAAI,CAACC,SAAL,IAAkB,MAAI,CAACA,SAAL,CAAeC,GAAvC;;OAPqB;MAS5BC,KAAK,EAAE;QACLJ,UAAU,EAAE,IADP;QAELC,GAAG,EAAE;iBAAM,MAAI,CAACC,SAAL,IAAkB,MAAI,CAACA,SAAL,CAAeG,IAAvC;;OAXqB;MAa5BC,gBAAgB,EAAE;QAChBN,UAAU,EAAE,IADI;QAEhBC,GAAG,EAAE;iBAAM,MAAI,CAACC,SAAL,IAAkB,MAAI,CAACA,SAAL,CAAeK,eAAvC;;;KAfT;;CATJ;;;;"}