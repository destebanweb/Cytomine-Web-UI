{"version":3,"file":"index.js","sources":["src/component/bingmaps-source/source.vue?rollup-plugin-vue=script.js","src/component/bingmaps-source/source.vue","src/component/bingmaps-source/index.js"],"sourcesContent":["\nimport BingMapsSource from 'ol/source/BingMaps'\nimport tileSource from '../../mixin/tile-source'\nimport { makeWatchers } from '../../util/vue-helpers'\n\nconst BINGMAPS_MAX_ZOOM = 21\nconst BINGMAPS_CULTURE = 'en-us'\n\nconst props = {\n  /**\n   * Enables hidpi tiles.\n   * @type {boolean}\n   */\n  hidpi: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * Culture code.\n   * @type {string}\n   */\n  culture: {\n    type: String,\n    default: BINGMAPS_CULTURE,\n  },\n  /**\n   * Bing Maps API key.\n   * @type {string}\n   */\n  apiKey: {\n    type: String,\n    required: true,\n  },\n  /**\n   * Type of imagery.\n   * @type {string}\n   */\n  imagerySet: {\n    type: String,\n    required: true,\n  },\n  maxZoom: {\n    type: Number,\n    default: BINGMAPS_MAX_ZOOM,\n  },\n  url: String,\n}\n\nconst methods = {\n  /**\n   * @return {BingMaps}\n   * @protected\n   */\n  createSource () {\n    return new BingMapsSource({\n      cacheSize: this.cacheSize,\n      hidpi: this.hidpi,\n      culture: this.culture,\n      key: this.apiKey,\n      imagerySet: this.imagerySet,\n      maxZoom: this.maxZoom,\n      reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n      wrapX: this.wrapX,\n      transition: this.transition,\n      tileLoadFunction: this.tileLoadFunction,\n    })\n  },\n}\n\nconst watch = makeWatchers(['apiKey', 'imagerySet'], () => function () {\n  this.scheduleRecreate()\n})\n\nexport default {\n  name: 'vl-source-bingmaps',\n  mixins: [tileSource],\n  props,\n  methods,\n  watch,\n}\n","<script>\n  import BingMapsSource from 'ol/source/BingMaps'\n  import tileSource from '../../mixin/tile-source'\n  import { makeWatchers } from '../../util/vue-helpers'\n\n  const BINGMAPS_MAX_ZOOM = 21\n  const BINGMAPS_CULTURE = 'en-us'\n\n  const props = {\n    /**\n     * Enables hidpi tiles.\n     * @type {boolean}\n     */\n    hidpi: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Culture code.\n     * @type {string}\n     */\n    culture: {\n      type: String,\n      default: BINGMAPS_CULTURE,\n    },\n    /**\n     * Bing Maps API key.\n     * @type {string}\n     */\n    apiKey: {\n      type: String,\n      required: true,\n    },\n    /**\n     * Type of imagery.\n     * @type {string}\n     */\n    imagerySet: {\n      type: String,\n      required: true,\n    },\n    maxZoom: {\n      type: Number,\n      default: BINGMAPS_MAX_ZOOM,\n    },\n    url: String,\n  }\n\n  const methods = {\n    /**\n     * @return {BingMaps}\n     * @protected\n     */\n    createSource () {\n      return new BingMapsSource({\n        cacheSize: this.cacheSize,\n        hidpi: this.hidpi,\n        culture: this.culture,\n        key: this.apiKey,\n        imagerySet: this.imagerySet,\n        maxZoom: this.maxZoom,\n        reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n        wrapX: this.wrapX,\n        transition: this.transition,\n        tileLoadFunction: this.tileLoadFunction,\n      })\n    },\n  }\n\n  const watch = makeWatchers(['apiKey', 'imagerySet'], () => function () {\n    this.scheduleRecreate()\n  })\n\n  export default {\n    name: 'vl-source-bingmaps',\n    mixins: [tileSource],\n    props,\n    methods,\n    watch,\n  }\n</script>\n","import { pick } from '../../util/minilo'\nimport Source from './source.vue'\n\n/**\n * @param {Vue} Vue\n * @param {VueLayersOptions} [options]\n */\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  Source,\n  plugin as install,\n}\n"],"names":["BINGMAPS_MAX_ZOOM","BINGMAPS_CULTURE","props","hidpi","type","Boolean","default","culture","String","apiKey","required","imagerySet","maxZoom","Number","url","methods","createSource","BingMapsSource","cacheSize","key","reprojectionErrorThreshold","wrapX","transition","tileLoadFunction","watch","makeWatchers","scheduleRecreate","name","mixins","tileSource","plugin","Vue","options","installed","pick","Source","component"],"mappings":";;;;;;;;;;;;;;;;AAKA,IAAMA,iBAAiB,GAAG,EAA1B;AACA,IAAMC,gBAAgB,GAAG,OAAzB;AAEA,IAAMC,KAAK,GAAG;;;;;EAKZC,KAAK,EAAE;IACLC,IAAI,EAAEC,OADD;IAELC,OAAO,EAAE;GAPC;;;;;;EAaZC,OAAO,EAAE;IACPH,IAAI,EAAEI,MADC;IAEPF,OAAO,EAAEL;GAfC;;;;;;EAqBZQ,MAAM,EAAE;IACNL,IAAI,EAAEI,MADA;IAENE,QAAQ,EAAE;GAvBA;;;;;;EA6BZC,UAAU,EAAE;IACVP,IAAI,EAAEI,MADI;IAEVE,QAAQ,EAAE;GA/BA;EAiCZE,OAAO,EAAE;IACPR,IAAI,EAAES,MADC;IAEPP,OAAO,EAAEN;GAnCC;EAqCZc,GAAG,EAAEN;CArCP;AAwCA,IAAMO,OAAO,GAAG;;;;;EAKdC,YALc,0BAKE;WACP,IAAIC,cAAJ,CAAmB;MACxBC,SAAS,EAAE,KAAKA,SADQ;MAExBf,KAAK,EAAE,KAAKA,KAFY;MAGxBI,OAAO,EAAE,KAAKA,OAHU;MAIxBY,GAAG,EAAE,KAAKV,MAJc;MAKxBE,UAAU,EAAE,KAAKA,UALO;MAMxBC,OAAO,EAAE,KAAKA,OANU;MAOxBQ,0BAA0B,EAAE,KAAKA,0BAPT;MAQxBC,KAAK,EAAE,KAAKA,KARY;MASxBC,UAAU,EAAE,KAAKA,UATO;MAUxBC,gBAAgB,EAAE,KAAKA;KAVlB,CAAP;;CANJ;AAqBA,IAAMC,KAAK,GAAGC,YAAY,CAAC,CAAC,QAAD,EAAW,YAAX,CAAD,EAA2B;SAAM,YAAY;SAChEC,gBAAL;GADmD;CAA3B,CAA1B;AAIA,aAAe;EACbC,IAAI,EAAE,oBADO;EAEbC,MAAM,EAAE,CAACC,UAAD,CAFK;EAGb3B,KAAK,EAALA,KAHa;EAIba,OAAO,EAAPA,OAJa;EAKbS,KAAK,EAALA;CALF;;;ACtEY,2BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAZ;;;;;AAIA,SAASM,MAAT,CAAiBC,GAAjB,EAAoC;MAAdC,OAAc,uEAAJ,EAAI;;MAC9BF,MAAM,CAACG,SAAX,EAAsB;;;;EAGtBH,MAAM,CAACG,SAAP,GAAmB,IAAnB;EAEAD,OAAO,GAAGE,IAAI,CAACF,OAAD,EAAU,gBAAV,CAAd;;iBACcG,MAAd,EAAsBH,OAAtB;;EAEAD,GAAG,CAACK,SAAJ,CAAcD,MAAM,CAACR,IAArB,EAA2BQ,MAA3B;;;;;;"}