{"version":3,"file":"index.js","sources":["src/component/modify-interaction/interaction.vue?rollup-plugin-vue=script.js","src/component/modify-interaction/interaction.vue","src/component/modify-interaction/index.js"],"sourcesContent":["\nimport { altKeyOnly, always, primaryAction } from 'ol/events/condition'\nimport ModifyInteraction from 'ol/interaction/Modify'\nimport interaction from '../../mixin/interaction'\nimport stylesContainer from '../../mixin/styles-container'\nimport { createStyle, defaultEditStyle } from '../../ol-ext/style'\nimport { isCollection, isVectorSource } from '../../ol-ext/util'\nimport observableFromOlEvent from '../../rx-ext/from-ol-event'\nimport { hasInteraction } from '../../util/assert'\nimport { isFunction, mapValues } from '../../util/minilo'\nimport mergeDescriptors from '../../util/multi-merge-descriptors'\nimport { makeWatchers } from '../../util/vue-helpers'\n\n/**\n * @vueProps\n */\nconst props = {\n  /**\n   * Source or collection identifier from IdentityMap.\n   * @type {String}\n   */\n  source: {\n    type: String,\n    required: true,\n  },\n  /**\n   * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event will be\n   * considered to add or move a vertex to the sketch. Default is `ol.events.condition.primaryAction`.\n   * @type {function|undefined}\n   */\n  condition: {\n    type: Function,\n    default: primaryAction,\n  },\n  /**\n   * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n   * By default, `ol.events.condition.singleClick` with `ol.events.condition.altKeyOnly` results in a vertex deletion.\n   * @type {function|undefined}\n   */\n  deleteCondition: {\n    type: Function,\n    default: altKeyOnly,\n  },\n  /**\n   * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether a new vertex can be added\n   * to the sketch features. Default is `ol.events.condition.always`.\n   * @type {function|undefined}\n   */\n  insertVertexCondition: {\n    type: Function,\n    default: always,\n  },\n  /**\n   * Pixel tolerance for considering the pointer close enough to a segment or vertex for editing.\n   * @type {number}\n   */\n  pixelTolerance: {\n    type: Number,\n    default: 10,\n  },\n  /**\n   * Wrap the world horizontally on the sketch overlay.\n   * @type {boolean}\n   */\n  wrapX: {\n    type: Boolean,\n    default: false,\n  },\n}\n\n/**\n * @vueMethods\n */\nconst methods = {\n  /**\n   * @return {Promise<Modify>}\n   * @protected\n   */\n  async createInteraction () {\n    let sourceIdent = this.makeIdent(this.source)\n    let source = await this.$identityMap.get(sourceIdent, this.$options.INSTANCE_PROMISE_POOL)\n\n    if (isFunction(source.getFeatures)) {\n      let features = source.getFeatures()\n      if (isCollection(features)) {\n        source = features\n      }\n    }\n\n    return new ModifyInteraction({\n      source: isVectorSource(source) ? source : undefined,\n      features: isCollection(source) ? source : undefined,\n      deleteCondition: this.deleteCondition,\n      insertVertexCondition: this.insertVertexCondition,\n      pixelTolerance: this.pixelTolerance,\n      style: this.createStyleFunc(),\n      wrapX: this.wrapX,\n    })\n  },\n  /**\n   * @return {function(feature: Feature): Style}\n   * @protected\n   */\n  getDefaultStyles () {\n    const defaultStyles = mapValues(defaultEditStyle(), styles => styles.map(createStyle))\n\n    return function __selectDefaultStyleFunc (feature) {\n      if (feature.getGeometry()) {\n        return defaultStyles[feature.getGeometry().getType()]\n      }\n    }\n  },\n  /**\n   * @returns {Object}\n   * @protected\n   */\n  getServices () {\n    return mergeDescriptors(\n      this::interaction.methods.getServices(),\n      this::stylesContainer.methods.getServices(),\n    )\n  },\n  /**\n   * @return {Interaction|undefined}\n   * @protected\n   */\n  getStyleTarget () {\n    return this.$interaction\n  },\n  /**\n   * @return {void}\n   * @protected\n   */\n  mount () {\n    this::interaction.methods.mount()\n  },\n  /**\n   * @return {void}\n   * @protected\n   */\n  unmount () {\n    this::interaction.methods.unmount()\n  },\n  /**\n   * @param {Array<{style: Style, condition: (function|boolean|undefined)}>|function(feature: Feature): Style|Vue|undefined} styles\n   * @return {void}\n   * @protected\n   */\n  setStyle (styles) {\n    if (styles !== this._styles) {\n      this._styles = styles\n      this.scheduleRefresh()\n    }\n  },\n  /**\n   * @return {void}\n   * @protected\n   */\n  subscribeAll () {\n    this::subscribeToInteractionChanges()\n  },\n}\n\nconst watch = makeWatchers(['source'], () => function () {\n  this.scheduleRecreate()\n})\n\n/**\n * @vueProto\n * @alias module:modify-interaction/interaction\n * @title vl-interaction-modify\n */\nexport default {\n  name: 'vl-interaction-modify',\n  mixins: [interaction, stylesContainer],\n  props,\n  methods,\n  watch,\n}\n\n/**\n * @private\n */\nfunction subscribeToInteractionChanges () {\n  hasInteraction(this)\n\n  const modifyEvents = observableFromOlEvent(this.$interaction, ['modifystart', 'modifyend'])\n  this.subscribeTo(modifyEvents, evt => {\n    ++this.rev\n    this.$emit(evt.type, evt)\n  })\n}\n","<script>\n  import { altKeyOnly, always, primaryAction } from 'ol/events/condition'\n  import ModifyInteraction from 'ol/interaction/Modify'\n  import interaction from '../../mixin/interaction'\n  import stylesContainer from '../../mixin/styles-container'\n  import { createStyle, defaultEditStyle } from '../../ol-ext/style'\n  import { isCollection, isVectorSource } from '../../ol-ext/util'\n  import observableFromOlEvent from '../../rx-ext/from-ol-event'\n  import { hasInteraction } from '../../util/assert'\n  import { isFunction, mapValues } from '../../util/minilo'\n  import mergeDescriptors from '../../util/multi-merge-descriptors'\n  import { makeWatchers } from '../../util/vue-helpers'\n\n  /**\n   * @vueProps\n   */\n  const props = {\n    /**\n     * Source or collection identifier from IdentityMap.\n     * @type {String}\n     */\n    source: {\n      type: String,\n      required: true,\n    },\n    /**\n     * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event will be\n     * considered to add or move a vertex to the sketch. Default is `ol.events.condition.primaryAction`.\n     * @type {function|undefined}\n     */\n    condition: {\n      type: Function,\n      default: primaryAction,\n    },\n    /**\n     * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n     * By default, `ol.events.condition.singleClick` with `ol.events.condition.altKeyOnly` results in a vertex deletion.\n     * @type {function|undefined}\n     */\n    deleteCondition: {\n      type: Function,\n      default: altKeyOnly,\n    },\n    /**\n     * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether a new vertex can be added\n     * to the sketch features. Default is `ol.events.condition.always`.\n     * @type {function|undefined}\n     */\n    insertVertexCondition: {\n      type: Function,\n      default: always,\n    },\n    /**\n     * Pixel tolerance for considering the pointer close enough to a segment or vertex for editing.\n     * @type {number}\n     */\n    pixelTolerance: {\n      type: Number,\n      default: 10,\n    },\n    /**\n     * Wrap the world horizontally on the sketch overlay.\n     * @type {boolean}\n     */\n    wrapX: {\n      type: Boolean,\n      default: false,\n    },\n  }\n\n  /**\n   * @vueMethods\n   */\n  const methods = {\n    /**\n     * @return {Promise<Modify>}\n     * @protected\n     */\n    async createInteraction () {\n      let sourceIdent = this.makeIdent(this.source)\n      let source = await this.$identityMap.get(sourceIdent, this.$options.INSTANCE_PROMISE_POOL)\n\n      if (isFunction(source.getFeatures)) {\n        let features = source.getFeatures()\n        if (isCollection(features)) {\n          source = features\n        }\n      }\n\n      return new ModifyInteraction({\n        source: isVectorSource(source) ? source : undefined,\n        features: isCollection(source) ? source : undefined,\n        deleteCondition: this.deleteCondition,\n        insertVertexCondition: this.insertVertexCondition,\n        pixelTolerance: this.pixelTolerance,\n        style: this.createStyleFunc(),\n        wrapX: this.wrapX,\n      })\n    },\n    /**\n     * @return {function(feature: Feature): Style}\n     * @protected\n     */\n    getDefaultStyles () {\n      const defaultStyles = mapValues(defaultEditStyle(), styles => styles.map(createStyle))\n\n      return function __selectDefaultStyleFunc (feature) {\n        if (feature.getGeometry()) {\n          return defaultStyles[feature.getGeometry().getType()]\n        }\n      }\n    },\n    /**\n     * @returns {Object}\n     * @protected\n     */\n    getServices () {\n      return mergeDescriptors(\n        this::interaction.methods.getServices(),\n        this::stylesContainer.methods.getServices(),\n      )\n    },\n    /**\n     * @return {Interaction|undefined}\n     * @protected\n     */\n    getStyleTarget () {\n      return this.$interaction\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    mount () {\n      this::interaction.methods.mount()\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    unmount () {\n      this::interaction.methods.unmount()\n    },\n    /**\n     * @param {Array<{style: Style, condition: (function|boolean|undefined)}>|function(feature: Feature): Style|Vue|undefined} styles\n     * @return {void}\n     * @protected\n     */\n    setStyle (styles) {\n      if (styles !== this._styles) {\n        this._styles = styles\n        this.scheduleRefresh()\n      }\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    subscribeAll () {\n      this::subscribeToInteractionChanges()\n    },\n  }\n\n  const watch = makeWatchers(['source'], () => function () {\n    this.scheduleRecreate()\n  })\n\n  /**\n   * @vueProto\n   * @alias module:modify-interaction/interaction\n   * @title vl-interaction-modify\n   */\n  export default {\n    name: 'vl-interaction-modify',\n    mixins: [interaction, stylesContainer],\n    props,\n    methods,\n    watch,\n  }\n\n  /**\n   * @private\n   */\n  function subscribeToInteractionChanges () {\n    hasInteraction(this)\n\n    const modifyEvents = observableFromOlEvent(this.$interaction, ['modifystart', 'modifyend'])\n    this.subscribeTo(modifyEvents, evt => {\n      ++this.rev\n      this.$emit(evt.type, evt)\n    })\n  }\n</script>\n","import { pick } from '../../util/minilo'\nimport Interaction from './interaction.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Interaction, options)\n\n  Vue.component(Interaction.name, Interaction)\n}\n\nexport default plugin\n\nexport {\n  Interaction,\n  plugin as install,\n}\n"],"names":["props","source","type","String","required","condition","Function","default","primaryAction","deleteCondition","altKeyOnly","insertVertexCondition","always","pixelTolerance","Number","wrapX","Boolean","methods","createInteraction","sourceIdent","makeIdent","$identityMap","get","$options","INSTANCE_PROMISE_POOL","isFunction","getFeatures","features","isCollection","ModifyInteraction","isVectorSource","undefined","style","createStyleFunc","getDefaultStyles","defaultStyles","mapValues","defaultEditStyle","styles","map","createStyle","__selectDefaultStyleFunc","feature","getGeometry","getType","getServices","mergeDescriptors","interaction","stylesContainer","getStyleTarget","$interaction","mount","unmount","setStyle","_styles","scheduleRefresh","subscribeAll","subscribeToInteractionChanges","watch","makeWatchers","scheduleRecreate","name","mixins","hasInteraction","modifyEvents","observableFromOlEvent","subscribeTo","evt","rev","$emit","plugin","Vue","options","installed","pick","Interaction","component"],"mappings":"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"}