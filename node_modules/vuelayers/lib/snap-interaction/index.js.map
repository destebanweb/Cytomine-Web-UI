{"version":3,"file":"index.js","sources":["src/component/snap-interaction/interaction.vue?rollup-plugin-vue=script.js","src/component/snap-interaction/interaction.vue","src/component/snap-interaction/index.js"],"sourcesContent":["\nimport SnapInteraction from 'ol/interaction/Snap'\nimport interaction from '../../mixin/interaction'\nimport { makeWatchers } from '../../util/vue-helpers'\n\n/**\n * @vueProps\n */\nconst props = {\n  /**\n   * Target source identifier from IdentityMap.\n   * @type {string}\n   */\n  source: {\n    type: String,\n    required: true,\n  },\n  /**\n   * Snap to edges\n   * @type {boolean}\n   */\n  edge: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * Snap to vertices.\n   * @type {boolean}\n   */\n  vertex: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * Pixel tolerance for considering the pointer close enough to a segment or vertex for snapping.\n   * @type {number}\n   */\n  pixelTolerance: {\n    type: Number,\n    default: 10,\n  },\n}\n\n/**\n * @vueMethods\n */\nconst methods = {\n  /**\n   * @return {Promise<Snap>}\n   * @protected\n   */\n  async createInteraction () {\n    let sourceIdent = this.makeIdent(this.source)\n    let source = await this.$identityMap.get(sourceIdent, this.$options.INSTANCE_PROMISE_POOL)\n\n    return new SnapInteraction({\n      source: source,\n    })\n  },\n  /**\n   * @return {void}\n   * @protected\n   */\n  mount () {\n    this::interaction.methods.mount()\n  },\n  /**\n   * @return {void}\n   * @protected\n   */\n  unmount () {\n    this::interaction.methods.unmount()\n  },\n  /**\n   * @return {void}\n   * @protected\n   */\n  subscribeAll () {\n  },\n}\n\nconst watch = makeWatchers(['source'], () => function () {\n  this.scheduleRecreate()\n})\n\n/**\n * @alias module:snap-interaction/interaction\n * @title vl-interaction-snap\n * @vueProto\n */\nexport default {\n  name: 'vl-interaction-snap',\n  mixins: [interaction],\n  props,\n  methods,\n  watch,\n}\n","<script>\n  import SnapInteraction from 'ol/interaction/Snap'\n  import interaction from '../../mixin/interaction'\n  import { makeWatchers } from '../../util/vue-helpers'\n\n  /**\n   * @vueProps\n   */\n  const props = {\n    /**\n     * Target source identifier from IdentityMap.\n     * @type {string}\n     */\n    source: {\n      type: String,\n      required: true,\n    },\n    /**\n     * Snap to edges\n     * @type {boolean}\n     */\n    edge: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Snap to vertices.\n     * @type {boolean}\n     */\n    vertex: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Pixel tolerance for considering the pointer close enough to a segment or vertex for snapping.\n     * @type {number}\n     */\n    pixelTolerance: {\n      type: Number,\n      default: 10,\n    },\n  }\n\n  /**\n   * @vueMethods\n   */\n  const methods = {\n    /**\n     * @return {Promise<Snap>}\n     * @protected\n     */\n    async createInteraction () {\n      let sourceIdent = this.makeIdent(this.source)\n      let source = await this.$identityMap.get(sourceIdent, this.$options.INSTANCE_PROMISE_POOL)\n\n      return new SnapInteraction({\n        source: source,\n      })\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    mount () {\n      this::interaction.methods.mount()\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    unmount () {\n      this::interaction.methods.unmount()\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    subscribeAll () {\n    },\n  }\n\n  const watch = makeWatchers(['source'], () => function () {\n    this.scheduleRecreate()\n  })\n\n  /**\n   * @alias module:snap-interaction/interaction\n   * @title vl-interaction-snap\n   * @vueProto\n   */\n  export default {\n    name: 'vl-interaction-snap',\n    mixins: [interaction],\n    props,\n    methods,\n    watch,\n  }\n</script>\n","import { pick } from '../../util/minilo'\nimport Interaction from './interaction.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Interaction, options)\n\n  Vue.component(Interaction.name, Interaction)\n}\n\nexport default plugin\n\nexport {\n  Interaction,\n  plugin as install,\n}\n"],"names":["props","source","type","String","required","edge","Boolean","default","vertex","pixelTolerance","Number","methods","createInteraction","sourceIdent","makeIdent","$identityMap","get","$options","INSTANCE_PROMISE_POOL","SnapInteraction","mount","interaction","unmount","subscribeAll","watch","makeWatchers","scheduleRecreate","name","mixins","plugin","Vue","options","installed","pick","Interaction","component"],"mappings":";;;;;;;;;;;;;;;;;;AAKA;;;;AAGA,IAAMA,KAAK,GAAG;;;;;EAKZC,MAAM,EAAE;IACNC,IAAI,EAAEC,MADA;IAENC,QAAQ,EAAE;GAPA;;;;;;EAaZC,IAAI,EAAE;IACJH,IAAI,EAAEI,OADF;IAEJC,OAAO,EAAE;GAfC;;;;;;EAqBZC,MAAM,EAAE;IACNN,IAAI,EAAEI,OADA;IAENC,OAAO,EAAE;GAvBC;;;;;;EA6BZE,cAAc,EAAE;IACdP,IAAI,EAAEQ,MADQ;IAEdH,OAAO,EAAE;;;;;;CA/Bb;AAsCA,IAAMI,OAAO,GAAG;;;;;EAKRC,iBALQ;;;;;;;;;cAMRC,WANQ,GAMM,KAAKC,SAAL,CAAe,KAAKb,MAApB,CANN;;qBAOO,KAAKc,YAAL,CAAkBC,GAAlB,CAAsBH,WAAtB,EAAmC,KAAKI,QAAL,CAAcC,qBAAjD,CAPP;;;cAORjB,MAPQ;+CASL,IAAIkB,eAAJ,CAAoB;gBACzBlB,MAAM,EAAEA;eADH,CATK;;;;;;;;;;;;;;;;;;;EAiBdmB,KAjBc,mBAiBL;IACDC,WAAW,CAACV,OAAZ,CAAoBS,KAA1B;GAlBY;;;;;;EAwBdE,OAxBc,qBAwBH;IACHD,WAAW,CAACV,OAAZ,CAAoBW,OAA1B;GAzBY;;;;;;EA+BdC,YA/Bc,0BA+BE;CA/BlB;AAmCA,IAAMC,KAAK,GAAGC,YAAY,CAAC,CAAC,QAAD,CAAD,EAAa;SAAM,YAAY;SAClDC,gBAAL;GADqC;CAAb,CAA1B;;;;;;;AASA,aAAe;EACbC,IAAI,EAAE,qBADO;EAEbC,MAAM,EAAE,CAACP,WAAD,CAFK;EAGbrB,KAAK,EAALA,KAHa;EAIbW,OAAO,EAAPA,OAJa;EAKba,KAAK,EAALA;CALF;;;ACvFY,2BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAZ,SAASK,MAAT,CAAiBC,GAAjB,EAAoC;MAAdC,OAAc,uEAAJ,EAAI;;MAC9BF,MAAM,CAACG,SAAX,EAAsB;;;;EAGtBH,MAAM,CAACG,SAAP,GAAmB,IAAnB;EAEAD,OAAO,GAAGE,IAAI,CAACF,OAAD,EAAU,gBAAV,CAAd;;iBACcG,WAAd,EAA2BH,OAA3B;;EAEAD,GAAG,CAACK,SAAJ,CAAcD,WAAW,CAACP,IAA1B,EAAgCO,WAAhC;;;;;;"}