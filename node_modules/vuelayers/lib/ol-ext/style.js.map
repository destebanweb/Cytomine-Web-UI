{"version":3,"file":"style.js","sources":["src/ol-ext/style.js"],"sourcesContent":["/**\n * Style helpers\n */\nimport Circle from 'ol/style/Circle'\nimport Fill from 'ol/style/Fill'\nimport Icon from 'ol/style/Icon'\nimport ImageStyle from 'ol/style/Image'\nimport RegularShape from 'ol/style/RegularShape'\nimport Stroke from 'ol/style/Stroke'\nimport Style from 'ol/style/Style'\nimport Text from 'ol/style/Text'\nimport parseColor from 'parse-color'\nimport { isFunction, isNumeric, lowerFirst, pick, reduce, upperFirst } from '../util/minilo'\nimport { GEOMETRY_TYPE } from './consts'\nimport * as geomHelper from './geom'\n\n/**\n * @return {VlStyle[]}\n */\nexport function defaultStyle () {\n  return [\n    {\n      fillColor: [255, 255, 255, 0.4],\n      strokeColor: '#3399CC',\n      strokeWidth: 1.25,\n      imageRadius: 5,\n    },\n  ]\n}\n\n/**\n * @return {Object<GEOMETRY_TYPE, VlStyle[]>}\n */\nexport function defaultEditStyle () {\n  /** @type {Object<GEOMETRY_TYPE, VlStyle[]>} */\n  let styles = {}\n  let white = [255, 255, 255, 1]\n  let blue = [0, 153, 255, 1]\n  let width = 3\n\n  styles[GEOMETRY_TYPE.LINE_STRING] = [\n    {\n      strokeColor: white,\n      strokeWidth: width + 2,\n    }, {\n      strokeColor: blue,\n      strokeWidth: width,\n    },\n  ]\n  styles[GEOMETRY_TYPE.MULTI_LINE_STRING] =\n    styles[GEOMETRY_TYPE.LINE_STRING]\n\n  styles[GEOMETRY_TYPE.POLYGON] = [\n    {\n      fillColor: [255, 255, 255, 0.5],\n    },\n  ].concat(styles[GEOMETRY_TYPE.LINE_STRING])\n  styles[GEOMETRY_TYPE.MULTI_POLYGON] =\n    styles[GEOMETRY_TYPE.POLYGON]\n\n  styles[GEOMETRY_TYPE.CIRCLE] =\n    styles[GEOMETRY_TYPE.POLYGON].concat(\n      styles[GEOMETRY_TYPE.LINE_STRING],\n    )\n\n  styles[GEOMETRY_TYPE.POINT] = [\n    {\n      imageRadius: width * 2,\n      fillColor: blue,\n      strokeColor: white,\n      strokeWidth: width / 2,\n      zIndex: Infinity,\n    },\n  ]\n  styles[GEOMETRY_TYPE.MULTI_POINT] =\n    styles[GEOMETRY_TYPE.POINT]\n\n  styles[GEOMETRY_TYPE.GEOMETRY_COLLECTION] =\n    styles[GEOMETRY_TYPE.POLYGON].concat(\n      styles[GEOMETRY_TYPE.LINE_STRING],\n      styles[GEOMETRY_TYPE.POINT],\n    )\n\n  return styles\n}\n\nconst isEmpty = x => {\n  if (x == null) return true\n  if (typeof x === 'number') return false\n\n  return ((typeof x === 'string' || Array.isArray(x)) && !x.length) ||\n    !Object.keys(x).length\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @return {Style|undefined}\n */\nexport function createStyle (vlStyle) {\n  if (isEmpty(vlStyle)) return\n\n  const olStyle = {\n    text: createTextStyle(vlStyle),\n    fill: createFillStyle(vlStyle),\n    stroke: createStrokeStyle(vlStyle),\n    image: createImageStyle(vlStyle),\n    geometry: createGeomStyle(vlStyle),\n    zIndex: vlStyle.zIndex,\n  }\n\n  if (!isEmpty(olStyle)) {\n    return new Style(olStyle)\n  }\n}\n\nconst addPrefix = prefix => str => prefix + (prefix ? upperFirst(str) : str)\n\n/**\n * @param {*} color\n * @returns {*}\n */\nexport function normalizeColor (color) {\n  let c = color\n\n  if (typeof color === 'string') {\n    c = parseColor(color).rgba\n  }\n\n  return c\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @param {string} [prefix]\n * @returns {Fill|undefined}\n */\nexport function createFillStyle (vlStyle, prefix = '') {\n  const prefixKey = addPrefix(prefix)\n  const keys = ['fillColor'].map(prefixKey)\n  const compiledKey = prefixKey('fill')\n\n  // check on already compiled style existence\n  if (vlStyle[compiledKey] instanceof Fill) return vlStyle[compiledKey]\n\n  const fillStyle = reduce(vlStyle, (style, value, name) => {\n    if (keys.includes(name) === false) {\n      return style\n    }\n    name = lowerFirst(name.replace(new RegExp(prefixKey('fill')), ''))\n    if (name === 'color') {\n      value = normalizeColor(value)\n    }\n    style[name] = value\n    return style\n  }, {})\n\n  if (!isEmpty(fillStyle)) {\n    return new Fill(fillStyle)\n  }\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @param {string} [prefix]\n * @returns {Stroke|undefined}\n */\nexport function createStrokeStyle (vlStyle, prefix = '') {\n  const prefixKey = addPrefix(prefix)\n  const keys = ['strokeColor', 'strokeWidth', 'strokeDash', 'strokeCap', 'strokeJoin'].map(prefixKey)\n  const compiledKey = prefixKey('stroke')\n\n  if (vlStyle[compiledKey] instanceof Stroke) return vlStyle[compiledKey]\n\n  const strokeStyle = reduce(vlStyle, (style, value, name) => {\n    if (keys.includes(name) === false) {\n      return style\n    }\n    switch (name) {\n      case prefixKey('strokeColor'):\n      case prefixKey('strokeWidth'):\n        name = lowerFirst(name.replace(new RegExp(prefixKey('stroke')), ''))\n        break\n      case prefixKey('strokeDash'):\n      case prefixKey('strokeCap'):\n      case prefixKey('strokeJoin'):\n        name = 'line' + name.replace(new RegExp(prefixKey('stroke')), '')\n        break\n    }\n    if (name === 'color') {\n      value = normalizeColor(value)\n    }\n    style[name] = value\n    return style\n  }, {})\n\n  if (!isEmpty(strokeStyle)) {\n    return new Stroke(strokeStyle)\n  }\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @returns {Image|undefined}\n * @todo split to separate circle, regShape, Icon\n */\nexport function createImageStyle (vlStyle) {\n  if (\n    isEmpty(vlStyle.imageSrc) &&\n    isEmpty(vlStyle.image) &&\n    isEmpty(vlStyle.imagePoints) &&\n    !isNumeric(vlStyle.imageRadius)\n  ) {\n    return\n  }\n\n  if (vlStyle.image instanceof ImageStyle) return vlStyle.image\n\n  let imageStyle, Ctor\n\n  if (!isEmpty(vlStyle.imageSrc) || !isEmpty(vlStyle.image)) {\n    // icon construction\n    Ctor = Icon\n    // then create Icon options\n    imageStyle = {\n      ...vlStyle,\n      anchor: vlStyle.imageAnchor,\n      anchorOrigin: vlStyle.imageAnchorOrigin,\n      color: vlStyle.imageColor,\n      offset: vlStyle.imageOffset,\n      offsetOrigin: vlStyle.imageOffsetOrigin,\n      opacity: vlStyle.imageOpacity,\n      scale: vlStyle.imageScale,\n      rotation: vlStyle.imageRotation,\n      size: vlStyle.imageSize,\n      img: vlStyle.image,\n      imgSize: vlStyle.imageImgSize,\n      src: vlStyle.imageSrc,\n      crossOrigin: vlStyle.imageCrossOrigin,\n    }\n  } else if (vlStyle.imagePoints != null) {\n    // regular shape construction\n    Ctor = RegularShape\n    // create RegularShape options\n    imageStyle = {\n      ...vlStyle,\n      points: vlStyle.imagePoints,\n      radius: vlStyle.imageRadius,\n      radius1: vlStyle.imageRadius1,\n      radius2: vlStyle.imageRadius2,\n      angle: vlStyle.imageAngle,\n      rotation: vlStyle.imageRotation,\n    }\n  } else {\n    // circle construction\n    Ctor = Circle\n    // create Circle options\n    imageStyle = {\n      ...vlStyle,\n      radius: vlStyle.imageRadius,\n    }\n  }\n\n  imageStyle = {\n    ...imageStyle,\n    fill: createFillStyle(vlStyle, 'image') || createFillStyle(vlStyle),\n    stroke: createStrokeStyle(vlStyle, 'image') || createStrokeStyle(vlStyle),\n    snapToPixel: true,\n  }\n\n  if (!isEmpty(imageStyle)) {\n    return new Ctor(imageStyle)\n  }\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @returns {Text|undefined}\n */\nexport function createTextStyle (vlStyle) {\n  // noinspection JSValidateTypes\n  if (vlStyle.text == null) return\n  if (vlStyle.text instanceof Text) return vlStyle.text\n\n  const textStyle = {\n    text: vlStyle.text,\n  }\n\n  let fontSize = vlStyle.textFontSize ? vlStyle.textFontSize + 'px' : undefined\n  let font = ['normal', fontSize, vlStyle.textFont].filter(x => !!x).join(' ')\n\n  Object.assign(\n    textStyle,\n    pick(['textAlign', 'textBaseline'], vlStyle),\n    {\n      font,\n      fill: createFillStyle(vlStyle, 'text') || createFillStyle(vlStyle),\n      stroke: createStrokeStyle(vlStyle, 'text') || createStrokeStyle(vlStyle),\n      scale: vlStyle.textScale,\n      rotation: vlStyle.textRotation,\n      offsetX: vlStyle.textOffsetX,\n      offsetY: vlStyle.textOffsetY,\n      rotateWithView: vlStyle.textRotateWithView,\n      padding: vlStyle.textPadding,\n      maxAngle: vlStyle.textMaxAngle,\n      overflow: vlStyle.textOverflow,\n      placement: vlStyle.textPlacement,\n      backgroundFill: createFillStyle(vlStyle, 'textBackground'),\n      backgroundStroke: createStrokeStyle(vlStyle, 'textBackground'),\n    },\n  )\n\n  if (!isEmpty(textStyle)) {\n    return new Text(textStyle)\n  }\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @return {Geometry|function|undefined}\n */\nexport function createGeomStyle (vlStyle) {\n  if (isFunction(vlStyle.geom)) {\n    return function __styleGeomFunc (feature) {\n      return vlStyle.geom(feature, geomHelper)\n    }\n  }\n\n  return vlStyle.geom\n}\n\n/**\n * @typedef {Style|Image|Fill|Stroke|Text|StyleFunction} OlStyle\n */\n\n/**\n * @typedef {Object} VlStyle\n *\n * Shared\n * @property {string|number[]|undefined} fillColor\n * @property {string|number[]|undefined} strokeColor\n * @property {number|undefined} strokeWidth\n * @property {number[]|undefined} strokeDash\n * @property {string|undefined} strokeCap\n * @property {string|undefined} strokeJoin\n * @property {number|undefined} zIndex\n * @property {Fill|undefined} fill\n * @property {Stroke|undefined} stroke\n *\n * Text only\n * @property {string|Text|undefined} text\n * @property {string|undefined} textFont\n * @property {number|undefined} textFontSize\n * @property {string|number[]|undefined} textFillColor\n * @property {string|number[]|undefined} textStrokeColor\n * @property {number|undefined} textStrokeWidth\n * @property {number[]|undefined} textStrokeDash\n * @property {string|undefined} textStrokeCap\n * @property {string|undefined} textStrokeJoin\n * @property {number|undefined} textScale\n * @property {string|undefined} textAlign\n * @property {number|undefined} textRotation\n * @property {number|undefined} textOffsetX\n * @property {number|undefined} textOffsetY\n * @property {Stroke|undefined} textStroke\n * @property {Fill|undefined} textFill\n * @property {boolean|undefined} textRotateWithView\n * @property {number[]|undefined} textPadding\n * @property {number|undefined} textMaxAngle\n * @property {boolean|undefined} textOverflow\n * @property {string|undefined} textPlacement\n * @property {string|undefined} textBaseline\n * @property {Fill|undefined} textBackgroundFillColor\n * @property {Stroke|undefined} textBackgroundStrokeColor\n * @property {Stroke|undefined} textBackgroundStrokeWidth\n * @property {Stroke|undefined} textBackgroundStrokeDash\n * @property {Stroke|undefined} textBackgroundStrokeCap\n * @property {Stroke|undefined} textBackgroundStrokeJoin\n *\n * Image only\n * @property {Image|undefined} image\n * @property {string|undefined} imageSrc\n * @property {number[]|undefined} imageSize\n * @property {number[]|undefined} imageImgSize\n * @property {number|undefined} imageOffset\n * @property {number[]|undefined} imageAnchor\n * @property {number|undefined} imageScale\n * @property {number|undefined} imageRotation\n * @property {number|undefined} imageRadius\n * @property {number|undefined} imageRadius1\n * @property {number|undefined} imageRadius2\n * @property {number|undefined} imagePoints\n * @property {number|undefined} imageAngle\n * @property {number|undefined} imageOpacity\n * @property {string|number[]|undefined} imageFillColor\n * @property {string|number[]|undefined} imageStrokeColor\n * @property {number|undefined} imageStrokeWidth\n * @property {number[]|undefined} imageStrokeDash\n * @property {string|undefined} imageStrokeCap\n * @property {string|undefined} imageStrokeJoin\n * @property {IconOrigin|undefined} imageAnchorOrigin\n * @property {ColorLike|undefined} imageColor\n * @property {IconOrigin|undefined} imageOffsetOrigin\n * @property {Stroke|undefined} imageStroke\n * @property {Fill|undefined} imageFill\n * @property {string|undefined} imageCrossOrigin\n *\n * @property {Geometry|function|undefined} geom Coordinates should be in map projection\n */\n"],"names":["defaultStyle","fillColor","strokeColor","strokeWidth","imageRadius","defaultEditStyle","styles","white","blue","width","GEOMETRY_TYPE","LINE_STRING","MULTI_LINE_STRING","POLYGON","concat","MULTI_POLYGON","CIRCLE","POINT","zIndex","Infinity","MULTI_POINT","GEOMETRY_COLLECTION","isEmpty","x","length","createStyle","vlStyle","olStyle","text","createTextStyle","fill","createFillStyle","stroke","createStrokeStyle","image","createImageStyle","geometry","createGeomStyle","Style","addPrefix","prefix","str","upperFirst","normalizeColor","color","c","parseColor","rgba","prefixKey","keys","map","compiledKey","Fill","fillStyle","reduce","style","value","name","includes","lowerFirst","replace","RegExp","Stroke","strokeStyle","imageSrc","imagePoints","isNumeric","ImageStyle","imageStyle","Ctor","Icon","anchor","imageAnchor","anchorOrigin","imageAnchorOrigin","imageColor","offset","imageOffset","offsetOrigin","imageOffsetOrigin","opacity","imageOpacity","scale","imageScale","rotation","imageRotation","size","imageSize","img","imgSize","imageImgSize","src","crossOrigin","imageCrossOrigin","RegularShape","points","radius","radius1","imageRadius1","radius2","imageRadius2","angle","imageAngle","Circle","snapToPixel","Text","textStyle","fontSize","textFontSize","undefined","font","textFont","filter","join","pick","textScale","textRotation","offsetX","textOffsetX","offsetY","textOffsetY","rotateWithView","textRotateWithView","padding","textPadding","maxAngle","textMaxAngle","overflow","textOverflow","placement","textPlacement","backgroundFill","backgroundStroke","isFunction","geom","__styleGeomFunc","feature","geomHelper"],"mappings":"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"}