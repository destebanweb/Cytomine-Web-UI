{"version":3,"file":"proj.js","sources":["src/ol-ext/proj.js"],"sourcesContent":["/**\n * Projection transform helpers\n */\nimport { addProjection as addProj, fromLonLat, get as getProj, toLonLat, transform, transformExtent } from 'ol/proj'\nimport Projection from 'ol/proj/Projection'\nimport { EPSG_3857, EPSG_4326, GEOMETRY_TYPE } from './consts'\n\nexport {\n  transform,\n  transformExtent,\n  getProj,\n  addProj,\n}\n\n/**\n * @param {Object} options\n * @return {Projection}\n */\nexport function createProj (options) {\n  return new Projection(options)\n}\n\n/**\n * @param {number[]} coordinate\n * @param {ProjectionLike} [projection]\n * @return {Coordinate|number[]}\n */\nexport function pointToLonLat (coordinate, projection = EPSG_3857) {\n  return toLonLat(coordinate, projection)\n}\n\n/**\n * @param {number[]} coordinate\n * @param {ProjectionLike} [projection]\n * @return {number[]}\n */\nexport function pointFromLonLat (coordinate, projection = EPSG_3857) {\n  return fromLonLat(coordinate, projection)\n}\n\nexport function transformPoint (coordinate, sourceProjection, destProjection) {\n  return transform(coordinate, sourceProjection, destProjection)\n}\n\n/**\n * @param {Array<number[]>} coordinates\n * @param {ProjectionLike} [projection]\n * @return {Array<number[]>}\n */\nexport function lineToLonLat (coordinates, projection = EPSG_3857) {\n  return coordinates.map(point => pointToLonLat(point, projection))\n}\n\n/**\n * @param {Array<number[]>} coordinates\n * @param {ProjectionLike} [projection]\n * @return {Array<number[]>}\n */\nexport function lineFromLonLat (coordinates, projection = EPSG_3857) {\n  return coordinates.map(point => pointFromLonLat(point, projection))\n}\n\nexport function transformLine (coordinates, sourceProjection, destProjection) {\n  return coordinates.map(point => transform(point, sourceProjection, destProjection))\n}\n\n/**\n * @param {Array<Array<number[]>>} coordinates\n * @param {ProjectionLike} [projection]\n * @return {Array<Array<number[]>>}\n */\nexport function polygonToLonLat (coordinates, projection = EPSG_3857) {\n  return coordinates.map(line => lineToLonLat(line, projection))\n}\n\n/**\n * @param {Array<Array<number[]>>} coordinates\n * @param {ProjectionLike} [projection]\n * @return {Array<Array<number[]>>}\n */\nexport function polygonFromLonLat (coordinates, projection = EPSG_3857) {\n  return coordinates.map(line => lineFromLonLat(line, projection))\n}\n\nexport function transformPolygon (coordinates, sourceProjection, destProjection) {\n  return coordinates.map(line => transformLine(line, sourceProjection, destProjection))\n}\n\n/**\n * @param {Array<number[]>} coordinates\n * @param {ProjectionLike} [projection]\n * @return {Array<number[]>}\n */\nexport function multiPointToLonLat (coordinates, projection = EPSG_3857) {\n  return coordinates.map(point => pointToLonLat(point, projection))\n}\n\n/**\n * @param {Array<number[]>} coordinates\n * @param {ProjectionLike} [projection]\n * @return {Array<number[]>}\n */\nexport function multiPointFromLonLat (coordinates, projection = EPSG_3857) {\n  return coordinates.map(point => pointFromLonLat(point, projection))\n}\n\nexport function transformMultiPoint (coordinates, sourceProjection, destProjection) {\n  return coordinates.map(point => transformPoint(point, sourceProjection, destProjection))\n}\n\n/**\n * @param {Array<Array<number[]>>} coordinates\n * @param {ProjectionLike} [projection]\n * @return {Array<Array<number[]>>}\n */\nexport function multiLineToLonLat (coordinates, projection = EPSG_3857) {\n  return coordinates.map(line => lineToLonLat(line, projection))\n}\n\n/**\n * @param {Array<Array<number[]>>} coordinates\n * @param {ProjectionLike} [projection]\n * @return {Array<Array<number[]>>}\n */\nexport function multiLineFromLonLat (coordinates, projection = EPSG_3857) {\n  return coordinates.map(line => lineFromLonLat(line, projection))\n}\n\nexport function transformMultiLine (coordinates, sourceProjection, destProjection) {\n  return coordinates.map(line => transformLine(line, sourceProjection, destProjection))\n}\n\n/**\n * @param {Array<Array<Array<number[]>>>} coordinates\n * @param {ProjectionLike} projection\n * @return {Array<Array<Array<number[]>>>}\n */\nexport function multiPolygonToLonLat (coordinates, projection = EPSG_3857) {\n  return coordinates.map(polygon => polygonToLonLat(polygon, projection))\n}\n\n/**\n * @param {Array<Array<Array<number[]>>>} coordinates\n * @param {ProjectionLike} projection\n * @return {Array<Array<Array<number[]>>>}\n */\nexport function multiPolygonFromLonLat (coordinates, projection = EPSG_3857) {\n  return coordinates.map(polygon => polygonFromLonLat(polygon, projection))\n}\n\nexport function transformMultiPolygon (coordinates, sourceProjection, destProjection) {\n  return coordinates.map(polygon => transformPolygon(polygon, sourceProjection, destProjection))\n}\n\n/**\n * Transforms by geom type\n * @type {Object<string, function>}\n */\nexport const transforms = {\n  [GEOMETRY_TYPE.POINT]: {\n    toLonLat: pointToLonLat,\n    fromLonLat: pointFromLonLat,\n    transform: transformPoint,\n  },\n  [GEOMETRY_TYPE.LINE_STRING]: {\n    toLonLat: lineToLonLat,\n    fromLonLat: lineFromLonLat,\n    transform: transformLine,\n  },\n  [GEOMETRY_TYPE.POLYGON]: {\n    toLonLat: polygonToLonLat,\n    fromLonLat: polygonFromLonLat,\n    transform: transformPolygon,\n  },\n  [GEOMETRY_TYPE.MULTI_POINT]: {\n    toLonLat: multiPointToLonLat,\n    fromLonLat: multiPointFromLonLat,\n    transform: transformMultiPoint,\n  },\n  [GEOMETRY_TYPE.MULTI_LINE_STRING]: {\n    toLonLat: multiLineToLonLat,\n    fromLonLat: multiLineFromLonLat,\n    transform: transformMultiLine,\n  },\n  [GEOMETRY_TYPE.MULTI_POLYGON]: {\n    toLonLat: multiPolygonToLonLat,\n    fromLonLat: multiPolygonFromLonLat,\n    transform: transformMultiPolygon,\n  },\n}\n\n/**\n * @param {Extent} extent\n * @param {ProjectionLike} [projection=EPSG:3857]\n * @return {Extent}\n */\nexport function extentFromLonLat (extent, projection = EPSG_3857) {\n  return transformExtent(extent, EPSG_4326, projection)\n}\n\n/**\n * @param {Extent} extent\n * @param {ProjectionLike} [projection=EPSG:3857]\n * @return {Extent}\n */\nexport function extentToLonLat (extent, projection = EPSG_3857) {\n  return transformExtent(extent, projection, EPSG_4326)\n}\n"],"names":["createProj","options","Projection","pointToLonLat","coordinate","projection","EPSG_3857","toLonLat","pointFromLonLat","fromLonLat","transformPoint","sourceProjection","destProjection","transform","lineToLonLat","coordinates","map","point","lineFromLonLat","transformLine","polygonToLonLat","line","polygonFromLonLat","transformPolygon","multiPointToLonLat","multiPointFromLonLat","transformMultiPoint","multiLineToLonLat","multiLineFromLonLat","transformMultiLine","multiPolygonToLonLat","polygon","multiPolygonFromLonLat","transformMultiPolygon","transforms","GEOMETRY_TYPE","POINT","LINE_STRING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","extentFromLonLat","extent","transformExtent","EPSG_4326","extentToLonLat"],"mappings":"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"}