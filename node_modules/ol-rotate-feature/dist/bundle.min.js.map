{"version":3,"file":"bundle.min.js","sources":["../src/util.js","../src/event.js","../src/shim.js","../src/interaction.js","../src/index.js"],"sourcesContent":["/**\n * This file is part of ol-rotate-feature package.\n * @module ol-rotate-feature\n * @license MIT\n * @author Vladimir Vershinin\n */\n\n/**\n * @param {boolean} condition\n * @param {string} message\n * @throws Error\n */\nexport function assert (condition, message = '') {\n  message = [ 'Assertion failed', message ].join(': ')\n\n  if (!condition) {\n    throw new Error(message)\n  }\n}\n\n/**\n * @param {*} arg\n * @returns {*}\n */\nexport function identity (arg) {\n  return arg\n}\n\n/**\n * @param {...*} args\n * @return {*}\n */\nexport function coalesce (...args) {\n  return args.filter(value => value != null).shift()\n}\n\nconst counters = {}\n/**\n * @param {string} [prefix]\n * @return {number}\n */\nexport function uniqId (prefix = '') {\n  const ns = prefix || 'default'\n  counters[ ns ] = counters[ ns ] == null ? 0 : counters[ ns ]\n\n  return String(prefix) + (++counters[ ns ])\n}\n\nexport function includes (arr, value) {\n  return arr.indexOf(value) !== -1\n}\n\nexport function isArray (val) {\n  return val::Object.prototype.toString() === '[object Array]'\n}\n","/**\n * This file is part of ol-rotate-feature package.\n * @module ol-rotate-feature\n * @license MIT\n * @author Vladimir Vershinin\n */\n/**\n * @enum {string}\n */\nexport const RotateFeatureEventType = {\n  /**\n   * Triggered upon feature rotate start.\n   * @event RotateFeatureEvent#rotatestart\n   */\n  START: 'rotatestart',\n  /**\n   * Triggered upon feature rotation.\n   * @event RotateFeatureEvent#rotating\n   */\n  ROTATING: 'rotating',\n  /**\n   * Triggered upon feature rotation end.\n   * @event RotateFeatureEvent#rotateend\n   */\n  END: 'rotateend'\n}\n\n/**\n * Events emitted by RotateFeatureInteraction instances are instances of this type.\n *\n * @class\n * @author Vladimir Vershinin\n */\nexport default class RotateFeatureEvent {\n  /**\n   * @param {string} type Type.\n   * @param {ol.Collection<ol.Feature>} features Rotated features.\n   * @param {number} angle Angle in radians.\n   * @param {ol.Coordinate} anchor Anchor position.\n   */\n  constructor (type, features, angle, anchor) {\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.propagationStopped_ = false\n\n    /**\n     * The event type.\n     * @type {string}\n     * @private\n     */\n    this.type_ = type\n\n    /**\n     * The features being rotated.\n     * @type {ol.Collection<ol.Feature>}\n     * @private\n     */\n    this.features_ = features\n    /**\n     * Current angle in radians.\n     * @type {number}\n     * @private\n     */\n    this.angle_ = angle\n    /**\n     * Current rotation anchor.\n     * @type {ol.Coordinate}\n     * @private\n     */\n    this.anchor_ = anchor\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get propagationStopped () {\n    return this.propagationStopped_\n  }\n\n  /**\n   * @type {RotateFeatureEventType}\n   */\n  get type () {\n    return this.type_\n  }\n\n  /**\n   * @type {ol.Collection<ol.Feature>}\n   */\n  get features () {\n    return this.features_\n  }\n\n  /**\n   * @type {number}\n   */\n  get angle () {\n    return this.angle_\n  }\n\n  /**\n   * @type {ol.Coordinate}\n   */\n  get anchor () {\n    return this.anchor_\n  }\n\n  /**\n   * Prevent event propagation.\n   */\n  preventDefault () {\n    this.propagationStopped_ = true\n  }\n\n  /**\n   * Stop event propagation.\n   */\n  stopPropagation () {\n    this.propagationStopped_ = true\n  }\n}\n","const ua = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : ''\n\nexport const MAC = ua.indexOf('macintosh') !== -1\n\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1\n\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent)\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey)\n}\n","/**\n * This file is part of ol-rotate-feature package.\n * @module ol-rotate-feature\n * @license MIT\n * @author Vladimir Vershinin\n */\n/**\n * Rotate interaction class.\n * Adds controls to rotate vector features.\n * Writes out total angle in radians (positive is counter-clockwise) to property for each feature.\n */\nimport PointerInteraction from 'ol/interaction/Pointer'\nimport Collection from 'ol/Collection'\nimport VectorLayer from 'ol/layer/Vector'\nimport VectorSource from 'ol/source/Vector'\nimport Feature from 'ol/Feature'\nimport Point from 'ol/geom/Point'\nimport Polygon from 'ol/geom/Polygon'\nimport GeometryCollection from 'ol/geom/GeometryCollection'\nimport Style from 'ol/style/Style'\nimport RegularShape from 'ol/style/RegularShape'\nimport Stroke from 'ol/style/Stroke'\nimport Fill from 'ol/style/Fill'\nimport Text from 'ol/style/Text'\nimport {getCenter as getExtentCenter} from 'ol/extent'\nimport { always, mouseOnly } from 'ol/events/condition';\nimport { assert, identity, includes, isArray } from './util'\nimport RotateFeatureEvent, { RotateFeatureEventType } from './event'\nimport { mouseActionButton } from './shim'\n\nconst ANCHOR_KEY = 'rotate-anchor'\nconst ARROW_KEY = 'rotate-arrow'\n\nconst ANGLE_PROP = 'angle'\nconst ANCHOR_PROP = 'anchor'\n\n/**\n * @todo todo добавить опцию condition - для возможности переопределения клавиш\n */\nexport default class RotateFeatureInteraction extends PointerInteraction {\n  /**\n   * @param {InteractionOptions} options\n   */\n  constructor (options = {}) {\n    super({\n      // handleEvent: handleEvent,\n      handleDownEvent,\n      handleUpEvent,\n      handleDragEvent,\n      handleMoveEvent\n    })\n    /**\n     * @type {string}\n     * @private\n     */\n    this.previousCursor_ = undefined\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.anchorFeature_ = undefined\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.arrowFeature_ = undefined\n    /**\n     * @type {Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = undefined\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.anchorMoving_ = false\n    /**\n     * @type {Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      style: options.style || getDefaultStyle(),\n      source: new VectorSource({\n        features: new Collection()\n      })\n    })\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = undefined\n    if (options.features) {\n      if (isArray(options.features)) {\n        this.features_ = new Collection(options.features)\n      } else if (options.features instanceof Collection) {\n        this.features_ = options.features\n      } else {\n        throw new Error('Features option should be an array or collection of features, ' +\n                        'got ' + (typeof options.features))\n      }\n    } else {\n      this.features_ = new Collection()\n    }\n\n    /**\n     * @type {boolean}\n     * @public\n     */\n    this.allowAnchorMovement = options.allowAnchorMovement === undefined ? true : options.allowAnchorMovement;\n\n    this.setAnchor(options.anchor || getFeaturesCentroid(this.features_))\n    this.setAngle(options.angle || 0)\n\n    this.features_.on('add', ::this.onFeatureAdd_)\n    this.features_.on('remove', ::this.onFeatureRemove_)\n    this.on('change:' + ANGLE_PROP, ::this.onAngleChange_)\n    this.on('change:' + ANCHOR_PROP, ::this.onAnchorChange_)\n\n    this.createOrUpdateAnchorFeature_()\n    this.createOrUpdateArrowFeature_()\n  }\n\n  /**\n   * @type {Collection<Feature>}\n   */\n  get features () {\n    return this.features_\n  }\n\n  /**\n   * @type {number}\n   */\n  get angle () {\n    return this.getAngle()\n  }\n\n  /**\n   * @param {number} angle\n   */\n  set angle (angle) {\n    this.setAngle(angle)\n  }\n\n  /**\n   * @type {Coordinate|number[]|undefined}\n   */\n  get anchor () {\n    return this.getAnchor()\n  }\n\n  /**\n   * @param {Coordinate|undefined} anchor\n   */\n  set anchor (anchor) {\n    this.setAnchor(anchor)\n  }\n\n  /**\n   * @param {PluggableMap} map\n   */\n  set map (map) {\n    this.setMap(map)\n  }\n\n  /**\n   * @type {PluggableMap}\n   */\n  get map() {\n    return this.getMap()\n  }\n\n  /**\n   * @param {boolean} active\n   */\n  set active (active) {\n    this.setActive(active)\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get active () {\n    return this.getActive()\n  }\n\n  /**\n   * @param {ol.Map} map\n   */\n  setMap (map) {\n    this.overlay_.setMap(map)\n    super.setMap(map)\n  }\n\n  /**\n   * @param {boolean} active\n   */\n  setActive (active) {\n    if (this.overlay_) {\n      this.overlay_.setMap(active ? this.map : undefined)\n    }\n\n    super.setActive(active)\n  }\n\n  /**\n   * Set current angle of interaction features.\n   *\n   * @param {number} angle\n   */\n  setAngle (angle) {\n    assert(!isNaN(parseFloat(angle)), 'Numeric value passed')\n\n    this.set(ANGLE_PROP, parseFloat(angle))\n  }\n\n  /**\n   * Returns current angle of interaction features.\n   *\n   * @return {number}\n   */\n  getAngle () {\n    return this.get(ANGLE_PROP)\n  }\n\n  /**\n   * Set current anchor position.\n   *\n   * @param {Coordinate | undefined} anchor\n   */\n  setAnchor (anchor) {\n    assert(anchor == null || isArray(anchor) && anchor.length === 2, 'Array of two elements passed')\n\n    this.set(ANCHOR_PROP, anchor != null ? anchor.map(parseFloat) : getFeaturesCentroid(this.features_))\n  }\n\n  /**\n   * Returns current anchor position.\n   *\n   * @return {Coordinate | undefined}\n   */\n  getAnchor () {\n    return this.get(ANCHOR_PROP)\n  }\n\n  /**\n   * @private\n   */\n  createOrUpdateAnchorFeature_ () {\n    const angle = this.getAngle()\n    const anchor = this.getAnchor()\n\n    if (!anchor) return\n\n    if (this.anchorFeature_) {\n      this.anchorFeature_.getGeometry().setCoordinates(anchor)\n      this.anchorFeature_.set(ANGLE_PROP, angle)\n    } else {\n      this.anchorFeature_ = new Feature({\n        geometry: new Point(anchor),\n        [ ANGLE_PROP ]: angle,\n        [ ANCHOR_KEY ]: true\n      })\n      this.overlay_.getSource().addFeature(this.anchorFeature_)\n    }\n  }\n\n  /**\n   * @private\n   */\n  createOrUpdateArrowFeature_ () {\n    const angle = this.getAngle()\n    const anchor = this.getAnchor()\n\n    if (!anchor) return\n\n    if (this.arrowFeature_) {\n      this.arrowFeature_.getGeometry().setCoordinates(anchor)\n      this.arrowFeature_.set(ANGLE_PROP, angle)\n    } else {\n      this.arrowFeature_ = new Feature({\n        geometry: new Point(anchor),\n        [ ANGLE_PROP ]: angle,\n        [ ARROW_KEY ]: true\n      })\n      this.overlay_.getSource().addFeature(this.arrowFeature_)\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetAngleAndAnchor_() {\n    this.resetAngle_();\n    this.resetAnchor_();\n  }\n\n  /**\n   * @private\n   */\n  resetAngle_() {\n    this.set(ANGLE_PROP, 0, true);\n    this.arrowFeature_ && this.arrowFeature_.set(ANGLE_PROP, this.getAngle());\n    this.anchorFeature_ && this.anchorFeature_.set(ANGLE_PROP, this.getAngle());\n  }\n\n  /**\n   * @private\n   */\n  resetAnchor_() {\n    this.set(ANCHOR_PROP, getFeaturesCentroid(this.features_), true);\n\n    if (this.getAnchor()) {\n      this.arrowFeature_ && this.arrowFeature_.getGeometry().setCoordinates(this.getAnchor());\n      this.anchorFeature_ && this.anchorFeature_.getGeometry().setCoordinates(this.getAnchor());\n    }\n  }\n\n  /**\n   * @private\n   */\n  onFeatureAdd_ () {\n    this.resetAngleAndAnchor_()\n    this.createOrUpdateAnchorFeature_()\n    this.createOrUpdateArrowFeature_()\n  }\n\n  /**\n   * @private\n   */\n  onFeatureRemove_ () {\n    this.resetAngleAndAnchor_()\n\n    if (this.features_.getLength()) {\n      this.createOrUpdateAnchorFeature_()\n      this.createOrUpdateArrowFeature_()\n    } else {\n      this.overlay_.getSource().clear()\n      this.anchorFeature_ = this.arrowFeature_ = undefined\n    }\n  }\n\n  /**\n   * @private\n   */\n  onAngleChange_({ oldValue }) {\n    this.features_.forEach(feature => feature.getGeometry().rotate(this.getAngle() - oldValue, this.getAnchor()))\n    this.arrowFeature_ && this.arrowFeature_.set(ANGLE_PROP, this.getAngle())\n    this.anchorFeature_ && this.anchorFeature_.set(ANGLE_PROP, this.getAngle())\n  }\n\n  /**\n   * @private\n   */\n  onAnchorChange_() {\n    const anchor = this.getAnchor()\n\n    if (anchor) {\n      this.anchorFeature_ && this.anchorFeature_.getGeometry().setCoordinates(anchor)\n      this.arrowFeature_ && this.arrowFeature_.getGeometry().setCoordinates(anchor)\n    }\n  }\n\n  /**\n   * @param {Collection<Feature>} features\n   * @private\n   */\n  dispatchRotateStartEvent_ (features) {\n    this.dispatchEvent(\n      new RotateFeatureEvent(\n        RotateFeatureEventType.START,\n        features,\n        this.getAngle(),\n        this.getAnchor()\n      )\n    )\n  }\n\n  /**\n   * @param {Collection<Feature>} features\n   * @private\n   */\n  dispatchRotatingEvent_ (features) {\n    this.dispatchEvent(\n      new RotateFeatureEvent(\n        RotateFeatureEventType.ROTATING,\n        features,\n        this.getAngle(),\n        this.getAnchor()\n      )\n    )\n  }\n\n  /**\n   * @param {Collection<Feature>} features\n   * @private\n   */\n  dispatchRotateEndEvent_ (features) {\n    this.dispatchEvent(\n      new RotateFeatureEvent(\n        RotateFeatureEventType.END,\n        features,\n        this.getAngle(),\n        this.getAnchor()\n      )\n    )\n  }\n}\n\n/**\n * @param {MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {RotateFeatureInteraction}\n * @private\n */\n// function handleEvent (evt) {\n//   // disable selection of inner features\n//   const foundFeature = evt.map.forEachFeatureAtPixel(evt.pixel, identity)\n//   if (\n//     includes([ 'click', 'singleclick', 'dblclick' ], evt.type) &&\n//     includes([ this.anchorFeature_, this.arrowFeature_ ], foundFeature)\n//   ) {\n//     return false\n//   }\n//\n//   return this::baseHandleEvent(evt)\n// }\n\n/**\n * @param {MapBrowserEvent} evt Event.\n * @return {boolean}\n * @this {RotateFeatureInteraction}\n * @private\n */\nfunction handleDownEvent (evt) {\n  if (!mouseOnly(evt)) {\n    return false;\n  }\n\n  if (mouseActionButton(evt) && this.condition_(evt)) {\n    // disable selection of inner features\n    const foundFeature = evt.map.forEachFeatureAtPixel(evt.pixel, identity)\n    if (\n      includes([ 'click', 'singleclick', 'dblclick' ], evt.type) &&\n      includes([ this.anchorFeature_, this.arrowFeature_ ], foundFeature)\n    ) {\n      return false\n    }\n    // handle click & drag on features for rotation\n    if (\n      foundFeature && !this.lastCoordinate_ &&\n      (\n        includes(this.features_.getArray(), foundFeature) ||\n        foundFeature === this.arrowFeature_\n      )\n    ) {\n      this.lastCoordinate_ = evt.coordinate\n\n      this::handleMoveEvent(evt)\n      this.dispatchRotateStartEvent_(this.features_)\n\n      return true\n    }\n    // handle click & drag on rotation anchor feature\n    else if (foundFeature && foundFeature === this.anchorFeature_ && this.allowAnchorMovement) {\n      this.anchorMoving_ = true\n      this::handleMoveEvent(evt)\n\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {MapBrowserEvent} evt Event.\n * @return {boolean}\n * @this {RotateFeatureInteraction}\n * @private\n */\nfunction handleUpEvent (evt) {\n  // stop drag sequence of features\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = undefined\n\n    this::handleMoveEvent(evt)\n    this.dispatchRotateEndEvent_(this.features_)\n\n    return true\n  }\n  // stop drag sequence of the anchors\n  else if (this.anchorMoving_) {\n    this.anchorMoving_ = false\n    this::handleMoveEvent(evt)\n\n    return true\n  }\n\n  return false\n}\n\n/**\n * @param {MapBrowserEvent} evt Event.\n * @return {boolean}\n * @this {RotateFeatureInteraction}\n * @private\n */\nfunction handleDragEvent ({ coordinate }) {\n  const anchorCoordinate = this.anchorFeature_.getGeometry().getCoordinates()\n\n  // handle drag of features by angle\n  if (this.lastCoordinate_) {\n    // calculate vectors of last and current pointer positions\n    const lastVector = [\n      this.lastCoordinate_[ 0 ] - anchorCoordinate[ 0 ],\n      this.lastCoordinate_[ 1 ] - anchorCoordinate[ 1 ]\n    ]\n    const newVector = [\n      coordinate[ 0 ] - anchorCoordinate[ 0 ],\n      coordinate[ 1 ] - anchorCoordinate[ 1 ]\n    ]\n\n    // calculate angle between last and current vectors (positive angle counter-clockwise)\n    let angle = Math.atan2(\n      lastVector[ 0 ] * newVector[ 1 ] - newVector[ 0 ] * lastVector[ 1 ],\n      lastVector[ 0 ] * newVector[ 0 ] + lastVector[ 1 ] * newVector[ 1 ]\n    )\n\n    this.setAngle(this.getAngle() + angle)\n    this.dispatchRotatingEvent_(this.features_)\n\n    this.lastCoordinate_ = coordinate\n  }\n  // handle drag of the anchor\n  else if (this.anchorMoving_) {\n    this.setAnchor(coordinate)\n  }\n}\n\n/**\n * @param {MapBrowserEvent} evt Event.\n * @return {boolean}\n * @this {RotateFeatureInteraction}\n * @private\n */\nfunction handleMoveEvent ({ map, pixel }) {\n  const elem = map.getTargetElement()\n  const foundFeature = map.forEachFeatureAtPixel(pixel, identity)\n\n  const setCursor = (cursor, vendor = false) => {\n    if (vendor) {\n      elem.style.cursor = '-webkit-' + cursor\n      elem.style.cursor = '-moz-' + cursor\n    }\n\n    elem.style.cursor = cursor\n  }\n\n  if (this.lastCoordinate_) {\n    this.previousCursor_ = elem.style.cursor\n    setCursor('grabbing', true)\n  } else if (\n    foundFeature &&\n    (\n      includes(this.features_.getArray(), foundFeature) ||\n      foundFeature === this.arrowFeature_\n    )\n  ) {\n    this.previousCursor_ = elem.style.cursor\n    setCursor('grab', true)\n  } else if (( foundFeature && foundFeature === this.anchorFeature_ && this.allowAnchorMovement) || this.anchorMoving_) {\n    this.previousCursor_ = elem.style.cursor\n    setCursor('crosshair')\n  } else {\n    setCursor(this.previousCursor_ || '')\n    this.previousCursor_ = undefined\n  }\n}\n\n/**\n * @returns {StyleFunction}\n * @private\n */\nfunction getDefaultStyle () {\n  const white = [ 255, 255, 255, 0.8 ]\n  const blue = [ 0, 153, 255, 0.8 ]\n  const transparent = [ 255, 255, 255, 0.01 ]\n  const width = 2\n\n  const styles = {\n    [ ANCHOR_KEY ]: [\n      new Style({\n        image: new RegularShape({\n          fill: new Fill({\n            color: [ 0, 153, 255, 0.8 ]\n          }),\n          stroke: new Stroke({\n            color: blue,\n            width: 1\n          }),\n          radius: 4,\n          points: 6\n        }),\n        zIndex: Infinity\n      })\n    ],\n    [ ARROW_KEY ]: [\n      new Style({\n        fill: new Fill({\n          color: transparent\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width + 2\n        }),\n        text: new Text({\n          font: '12px sans-serif',\n          offsetX: 20,\n          offsetY: -20,\n          fill: new Fill({\n            color: 'blue'\n          }),\n          stroke: new Stroke({\n            color: white,\n            width: width + 1\n          })\n        }),\n        zIndex: Infinity\n      }),\n      new Style({\n        fill: new Fill({\n          color: transparent\n        }),\n        stroke: new Stroke({\n          color: blue,\n          width\n        }),\n        zIndex: Infinity\n      })\n    ]\n  }\n\n  return function (feature, resolution) {\n    let style\n    const angle = feature.get(ANGLE_PROP) || 0\n\n    switch (true) {\n      case feature.get(ANCHOR_KEY):\n        style = styles[ ANCHOR_KEY ]\n        style[ 0 ].getImage().setRotation(-angle)\n\n        return style\n      case feature.get(ARROW_KEY):\n        style = styles[ ARROW_KEY ]\n\n        const coordinates = feature.getGeometry().getCoordinates()\n        // generate arrow polygon\n        const geom = new Polygon([\n          [\n            [ coordinates[ 0 ], coordinates[ 1 ] - 6 * resolution ],\n            [ coordinates[ 0 ] + 8 * resolution, coordinates[ 1 ] - 12 * resolution ],\n            [ coordinates[ 0 ], coordinates[ 1 ] + 30 * resolution ],\n            [ coordinates[ 0 ] - 8 * resolution, coordinates[ 1 ] - 12 * resolution ],\n            [ coordinates[ 0 ], coordinates[ 1 ] - 6 * resolution ],\n          ]\n        ])\n\n        // and rotate it according to current angle\n        geom.rotate(angle, coordinates)\n        style[ 0 ].setGeometry(geom)\n        style[ 1 ].setGeometry(geom)\n        style[ 0 ].getText().setText(Math.round(-angle * 180 / Math.PI) + '°')\n\n        return style\n    }\n  }\n}\n\n/**\n * @param {Collection<Feature>|Array<Feature>} features\n * @returns {Extent | number[] | undefined}\n * @private\n */\nfunction getFeaturesExtent (features) {\n  features = features instanceof Collection ? features.getArray() : features\n  if (!features.length) return\n\n  return new GeometryCollection(features.map(feature => feature.getGeometry())).getExtent()\n}\n\n/**\n * @param {Collection<ol.Feature> | Array<Feature>} features\n * @return {Coordinate | number[] | undefined}\n */\nfunction getFeaturesCentroid (features) {\n  features = features instanceof Collection ? features.getArray() : features\n  if (!features.length) return\n\n  return getExtentCenter(getFeaturesExtent(features))\n}\n","/**\n * This file is part of ol-rotate-feature package.\n * @module ol-rotate-feature\n * @license MIT\n * @author Vladimir Vershinin\n */\nimport RotateFeatureInteraction from \"./interaction\"\n\n// for backward compatibility\nif (typeof window !== 'undefined' && window.ol) {\n  window.ol.interaction.RotateFeature = RotateFeatureInteraction\n}\n\nexport default RotateFeatureInteraction\n"],"names":["assert","condition","message","join","Error","identity","arg","includes","arr","value","indexOf","isArray","val","Object","prototype","toString","RotateFeatureEventType","RotateFeatureEvent","type","features","angle","anchor","propagationStopped_","type_","features_","angle_","anchor_","this","ua","navigator","userAgent","toLowerCase","MAC","WEBKIT","mouseActionButton","mapBrowserEvent","originalEvent","button","ctrlKey","ANCHOR_KEY","ARROW_KEY","ANGLE_PROP","ANCHOR_PROP","RotateFeatureInteraction","options","white","blue","transparent","styles","previousCursor_","undefined","anchorFeature_","arrowFeature_","lastCoordinate_","anchorMoving_","overlay_","VectorLayer","style","Style","RegularShape","Fill","Stroke","Infinity","width","Text","feature","resolution","get","getImage","setRotation","coordinates","getGeometry","getCoordinates","geom","Polygon","rotate","setGeometry","getText","setText","Math","round","PI","VectorSource","Collection","condition_","always","allowAnchorMovement","setAnchor","getFeaturesCentroid","_this","setAngle","on","onFeatureAdd_","onFeatureRemove_","onAngleChange_","onAnchorChange_","createOrUpdateAnchorFeature_","createOrUpdateArrowFeature_","PointerInteraction","map","setMap","active","isNaN","parseFloat","set","length","getAngle","getAnchor","setCoordinates","Feature","Point","getSource","addFeature","resetAngle_","resetAnchor_","resetAngleAndAnchor_","getLength","clear","oldValue","forEach","_this2","dispatchEvent","getMap","setActive","getActive","handleDownEvent","evt","mouseOnly","foundFeature","forEachFeatureAtPixel","pixel","getArray","coordinate","dispatchRotateStartEvent_","handleUpEvent","dispatchRotateEndEvent_","handleDragEvent","anchorCoordinate","lastVector","newVector","atan2","dispatchRotatingEvent_","handleMoveEvent","elem","getTargetElement","setCursor","cursor","getExtentCenter","GeometryCollection","getExtent","getFeaturesExtent","window","ol","interaction","RotateFeature"],"mappings":"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"}